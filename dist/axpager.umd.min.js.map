{"version":3,"file":"axpager.umd.min.js","sources":["../src/ajax/ajax-adapter.ts","../src/ajax/adapters/xml-http-request-adapter.ts","../src/axpager.ts","../src/ajax/adapters/fetch-adapter.ts","../src/public-api.ts"],"sourcesContent":["import {RequestInitOption} from \"../config/request-option\";\n\nexport const ContentType = {\n    JSON: 'application/json',\n    URL_ENCODED: 'application/x-www-form-urlencoded',\n    FORM_DATA: 'multipart/form-data'\n};\n\n/**\n * ajax request adapter.\n */\nexport interface AjaxAdapter {\n\n    /**\n     * request method, resolve response and reject exception.\n     */\n    request(url: string, pageParams: {}, reqOption: RequestInitOption): Promise<any>;\n}","import {ContentType, AjaxAdapter} from \"../ajax-adapter\";\nimport {RequestInitOption} from \"../../config/request-option\";\n\n/**\n * Base on XMLHttpRequest default implementation.\n */\nexport class XMLHttpRequestAdapter implements AjaxAdapter {\n    private xhr: XMLHttpRequest;\n\n    request(url: string, pageParams: {}, option: RequestInitOption): Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            if (this.xhr && this.xhr.readyState !== 4) {\n                this.xhr.abort();\n            }\n            this.xhr = new XMLHttpRequest();\n            this.xhr.responseType = 'json';\n            Object.keys(option.headers).forEach(k => {\n                this.xhr.setRequestHeader(k, option.headers[k]);\n            });\n            option.before(this.xhr);\n            this.xhr.onload = function () {\n                if (this.readyState === 4 && this.status >= 200 && this.status < 300) {\n                    resolve(this.response);\n                    return;\n                }\n                reject(this.status + ': ' + (this.statusText || 'request failed.'));\n            };\n            if (option.timeout && option.timeout >= 0) {\n                this.xhr.timeout = option.timeout;\n                this.xhr.ontimeout = function () {\n                    reject('408: request timeout, request wait time > ' + this.timeout);\n                };\n            }\n            this.xhr.onerror = function () {\n                reject(this.status + \": \" + (this.statusText || 'server error.'));\n            };\n            const method = (option.method || 'GET').toUpperCase();\n            if (method === 'GET') {\n                const req = Object.assign({}, option.data, pageParams);\n                const suffix = url.includes('?') ? '&' : '?';\n                const searchUrl = url + suffix + new URLSearchParams(req as {});\n                this.xhr.open(method, searchUrl, true);\n                this.xhr.send();\n                return;\n            }\n            if (method === 'POST') {\n                this.xhr.open(method, url, true);\n                if (option.data instanceof FormData) {\n                    const fd = new FormData();\n                    option.data.forEach((v, k) => fd.set(k, v));\n                    Object.keys(pageParams).forEach(k => fd.set(k, pageParams[k]));\n                    this.xhr.send(fd);\n                    return;\n                }\n                const contentType = option.headers['Content-Type'] || ContentType.URL_ENCODED;\n                if (contentType === ContentType.FORM_DATA) {\n                    const fd = new FormData();\n                    Object.keys(option.data).forEach(k => fd.set(k, option.data[k]));\n                    Object.keys(pageParams).forEach(k => fd.set(k, pageParams[k]));\n                    this.xhr.send(fd);\n                    return;\n                }\n                const req = Object.assign({}, option.data, pageParams);\n                if (contentType === ContentType.URL_ENCODED) {\n                    this.xhr.send(new URLSearchParams(req));\n                    return;\n                }\n                if (contentType === ContentType.JSON) {\n                    this.xhr.send(JSON.stringify(req));\n                    return;\n                }\n                this.xhr.abort();\n                reject('Not support Content-Type: ' + contentType);\n            }\n            reject('Not support ' + method + ' method.');\n        });\n    }\n}","import {PageConfig} from \"./config/page-config\";\nimport {RequestInitOption, RequestOption} from \"./config/request-option\";\nimport {PageEvent} from \"./config/page-event\";\nimport {XMLHttpRequestAdapter} from \"./ajax/adapters/xml-http-request-adapter\";\n\n// noinspection JSUnresolvedReference\n/**\n * default page init config.\n */\nconst defaultPageConfig: PageConfig = {\n    itemsPerPageLabel: '每页条数 ',\n    firstPageLabel: '第一页',\n    previousPageLabel: '上一页',\n    nextPageLabel: '下一页',\n    lastPageLabel: '最后一页',\n    hidePageSize: false,\n    showFirstLastButtons: true,\n    showPageSizeOptions: true,\n    initPageNumber: 1,\n    initPageSize: 10,\n    pageRadius: 0,\n    pageNumbersType: 'button',\n    pageSizeOptions: [10, 15, 30],\n    ajaxAdapter: new XMLHttpRequestAdapter(),\n    getRangeLabel: (page, size, pages, length) => `第${page}/${pages}页，共${length}条`,\n    getPageParams: (page, size) => ({page: page, size: size}),\n    getPagedResource: response => ({data: response.data, length: response.pager.recordCount}),\n    changes: (pageEvent, eventTarget) => void (0),\n};\n/**\n * default request paging option.\n */\nconst defaultRequestOption: RequestOption = {\n    method: 'GET',\n    data: {},\n    headers: {},\n    timeout: -1,\n    before: init => void (0),\n    success: (data, pageEvent, requestData) => void (0),\n    error: error => void (0),\n    finish: () => void (0),\n    filter: (item, requestData) => true\n}\n\nconst icons = {\n    fastBackward: '<svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"axp-icon\"><path d=\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"></path></svg>',\n    backward: '<svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"axp-icon\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"></path></svg>',\n    forward: '<svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"axp-icon\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"></path></svg>',\n    fastForward: '<svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"axp-icon\"><path d=\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"></path></svg>',\n};\n\n/**\n * create html element\n * @param tagName tag name\n * @param attributes attributes\n */\nexport const createElement = (tagName: string, attributes: { [index: string]: any } = {}): HTMLElement => {\n    const e = document.createElement(tagName);\n    Object.keys(attributes).forEach(a => {\n        e[a] = attributes[a];\n    });\n    return e;\n};\n\nconst initDomElements = Symbol('initDomElements');\nconst updateActionStatus = Symbol('updateActionStatus');\nconst updateRangeLabel = Symbol('updateRangeLabel');\nconst updateCurrent = Symbol('updateCurrent');\nconst calcPageNumbers = Symbol('calcPageNumbers');\n\n/**\n * paginator support ajax request and static array data paging.\n */\nexport class axpager {\n    private container!: HTMLElement;\n    private config: PageConfig = {};\n    private target: string | any[];\n    private readonly actions!: {\n        btnLast: HTMLButtonElement;\n        btnNext: HTMLButtonElement;\n        btnPrev: HTMLButtonElement;\n        btnFirst: HTMLButtonElement;\n        selectPageSize: HTMLSelectElement;\n    };\n    private readonly labels!: {\n        itemsPerPageLabel: HTMLSpanElement;\n        rangeLabel: HTMLSpanElement\n    };\n    private readonly panels!: {\n        actionsPanel: HTMLDivElement;\n        pageSizePanel: HTMLDivElement;\n        pagesPanel: HTMLDivElement | HTMLSelectElement;\n    };\n    private pageNumberButtons: HTMLButtonElement[] = [];\n    private previousPage: number = 1;\n    private currentPage: number = 1;\n    private length: number = 0;\n    private size: number = 0;\n    private pageNumbers: number[] = [];\n    private option: RequestOption;\n    private disabled = false;\n\n    /**\n     * paginator.\n     * @param container container element\n     * @param config config\n     */\n    constructor(container: HTMLElement, config?: PageConfig) {\n        this.container = container;\n        this.config = Object.assign({}, defaultPageConfig, config);\n        this.currentPage = this.config.initPageNumber || 1;\n        this.size = this.config.pageSizeOptions.includes(this.config.initPageSize) ? this.config.initPageSize : (this.config.pageSizeOptions[0] || 10);\n        this.actions = {\n            selectPageSize: createElement('SELECT', {\n                className: 'axp-select axp-size-options',\n                disabled: true\n            }) as HTMLSelectElement,\n            btnFirst: createElement('BUTTON', {\n                type: 'button',\n                title: this.config.firstPageLabel,\n                innerHTML: `${icons.fastBackward}<span class=\"axp-btn-touch-target\"></span>`,\n                className: 'axp-btn',\n                disabled: true\n            }) as HTMLButtonElement,\n            btnPrev: createElement('BUTTON', {\n                type: 'button',\n                title: this.config.previousPageLabel,\n                innerHTML: `${icons.backward}<span class=\"axp-btn-touch-target\"></span>`,\n                className: 'axp-btn',\n                disabled: true\n            }) as HTMLButtonElement,\n            btnNext: createElement('BUTTON', {\n                type: 'button',\n                title: this.config.nextPageLabel,\n                innerHTML: `${icons.forward}<span class=\"axp-btn-touch-target\"></span>`,\n                className: 'axp-btn',\n                disabled: true\n            }) as HTMLButtonElement,\n            btnLast: createElement('BUTTON', {\n                type: 'button',\n                title: this.config.lastPageLabel,\n                innerHTML: `${icons.fastForward}<span class=\"axp-btn-touch-target\"></span>`,\n                className: 'axp-btn',\n                disabled: true\n            }) as HTMLButtonElement,\n        };\n\n        this.labels = {\n            itemsPerPageLabel: createElement('SPAN', {\n                className: 'axp-label axp-items-per-page'\n            }) as HTMLSpanElement,\n            rangeLabel: createElement('SPAN', {className: 'axp-label axp-range'}) as HTMLSpanElement\n        };\n\n        this.panels = {\n            pageSizePanel: createElement('DIV', {className: 'axp-page-size'}) as HTMLDivElement,\n            actionsPanel: createElement('DIV', {className: 'axp-range-actions'}) as HTMLDivElement,\n            pagesPanel: this.config.pageNumbersType === 'select' ?\n                createElement('SELECT', {\n                    className: 'axp-select axp-page-numbers',\n                    disabled: true\n                }) as HTMLSelectElement :\n                createElement('DIV', {className: 'axp-pages'}) as HTMLDivElement\n        };\n\n        this.panels.actionsPanel.addEventListener('click', e => {\n            if (this.disabled) {\n                return;\n            }\n            let target = e.target as HTMLButtonElement;\n            if (target == null) return;\n            if (target.className === 'axp-btn-touch-target') {\n                target = target.parentElement as HTMLButtonElement;\n            }\n            if (target == null || target.disabled) {\n                return;\n            }\n            const actions = this.actions;\n            let matched = true;\n            const tempPreviousPage = this.previousPage;\n            this.previousPage = this.currentPage;\n            switch (target) {\n                case actions.btnFirst:\n                    this.currentPage = 1;\n                    break;\n                case actions.btnPrev:\n                    this.currentPage = this.currentPage > 1 ? this.currentPage - 1 : 1;\n                    break;\n                case actions.btnNext:\n                    const next = this.currentPage + 1;\n                    const pageCount = this.pages;\n                    this.currentPage = next > pageCount ? pageCount : next;\n                    break;\n                case actions.btnLast:\n                    this.currentPage = this.pages;\n                    break;\n                default:\n                    if (this.config.pageNumbersType !== 'select' && this.config.pageRadius > 1) {\n                        const idx = this.pageNumberButtons.indexOf(target);\n                        if (idx > -1) {\n                            this.currentPage = this.pageNumbers[idx];\n                            break;\n                        }\n                    }\n                    this.previousPage = tempPreviousPage;\n                    matched = false;\n                    break;\n            }\n            if (matched) {\n                this.config.changes(this.pageEvent, target);\n                this.of(this.target, this.option);\n            }\n        });\n\n        this.actions.selectPageSize.addEventListener('change', e => {\n            if (this.disabled) {\n                return;\n            }\n            const select = e.target as HTMLSelectElement;\n            if (select.disabled) {\n                return;\n            }\n            this.previousPage = this.currentPage;\n            const idx = select.options.selectedIndex;\n            this.size = this.config.pageSizeOptions[idx] || 10;\n            const newPages = this.pages;\n            if (this.currentPage > newPages) {\n                this.currentPage = newPages;\n            }\n            this.config.changes(this.pageEvent, e.target);\n            this.of(this.target, this.option);\n        });\n\n        if (this.config.pageNumbersType === 'select' && this.config.pageRadius > 1) {\n            this.panels.pagesPanel.addEventListener('change', e => {\n                if (this.disabled) {\n                    return;\n                }\n                const select = e.target as HTMLSelectElement;\n                if (select.disabled) {\n                    return;\n                }\n                this.previousPage = this.currentPage;\n                const idx = select.options.selectedIndex;\n                this.currentPage = this.pageNumbers[idx];\n                this.config.changes(this.pageEvent, e.target);\n                this.of(this.target, this.option);\n            });\n        }\n        this[initDomElements]();\n    }\n\n    /**\n     * total pages.\n     */\n    get pages(): number {\n        if (this.length <= 1) {\n            return 1;\n        }\n        const num = this.length / this.size;\n        if (num <= 1) {\n            return 1;\n        }\n        const int = Math.floor(num);\n        if (int === num) {\n            return int;\n        }\n        return int + 1;\n    }\n\n    /**\n     * ajax paging request page params.\n     */\n    get pageParams() {\n        return this.config.getPageParams(this.currentPage, this.size);\n    }\n\n    /**\n     * page event.\n     */\n    get pageEvent(): PageEvent {\n        const end = this.currentPage * this.size;\n        return {\n            previousPage: this.previousPage,\n            page: this.currentPage,\n            size: this.size,\n            start: (this.currentPage - 1) * this.size,\n            end: end > this.length ? this.length : end,\n            pages: this.pages,\n            length: this.length\n        }\n    }\n\n    /**\n     * init a new paginator instance.\n     * @param container container element\n     * @param config config\n     * @return xpager paginator\n     */\n    static init(container: HTMLElement, config?: PageConfig): axpager {\n        return new axpager(container, config);\n    }\n\n    /**\n     * ajax request paging.\n     * @param url url\n     * @param option option\n     */\n    ajax(url: string, option?: RequestOption) {\n        if (this.disabled) {\n            return;\n        }\n        if (!(typeof url === 'string')) {\n            throw Error('Request url is required.');\n        }\n        this.target = url;\n        this.option = Object.assign({}, defaultRequestOption, option);\n        const initOption: RequestInitOption = {\n            method: this.option.method,\n            data: this.option.data,\n            headers: this.option.headers,\n            timeout: this.option.timeout,\n            before: this.option.before\n        };\n        this.config.ajaxAdapter.request(this.target, this.pageParams, initOption)\n            .then(response => {\n                const {data, length} = this.config.getPagedResource(response);\n                this[updateCurrent](length);\n                const pageEvent = this.pageEvent;\n                this.option.success(data, pageEvent, this.option.data);\n                this[updateActionStatus](pageEvent.page, pageEvent.pages, pageEvent.length);\n                this[updateRangeLabel]();\n            }).catch(this.option.error)\n            .finally(this.option.finish);\n    }\n\n    /**\n     * static array data paging.\n     * @param data array\n     * @param option option\n     */\n    resource(data: any[], option?: RequestOption) {\n        if (this.disabled) {\n            return;\n        }\n        if (!(data instanceof Array)) {\n            throw Error('data must be an Array.');\n        }\n        this.target = data;\n        this.option = Object.assign({}, defaultRequestOption, option);\n        this.option.before(null);\n        const filteredResource = this.target.filter(item => this.option.filter(item, this.option.data));\n        this[updateCurrent](filteredResource.length);\n        const pageEvent = this.pageEvent;\n        const pagedResource = filteredResource.slice(pageEvent.start, pageEvent.end);\n        this.option.success(pagedResource, pageEvent, this.option.data);\n        this[updateActionStatus](pageEvent.page, pageEvent.pages, pageEvent.length);\n        this[updateRangeLabel]();\n        this.option.finish();\n    }\n\n    /**\n     * request paging.\n     * @param target url or static array data\n     * @param option option\n     */\n    of(target: string | any[], option?: RequestOption) {\n        if (typeof target === 'string') {\n            this.ajax(target, option);\n            return;\n        }\n        if (target instanceof Array) {\n            this.resource(target, option);\n            return;\n        }\n        throw Error(target + ' can not be paging.');\n    }\n\n    /**\n     * refresh current page's data.\n     */\n    refresh() {\n        this.of(this.target, this.option);\n    }\n\n    /**\n     * goto target page number.\n     * @param page target page number\n     */\n    goto(page: number) {\n        if (this.disabled) {\n            return;\n        }\n        if (typeof page !== 'number') {\n            throw Error('page must be number.');\n        }\n        this.previousPage = this.currentPage;\n        if (page < 1) {\n            this.currentPage = 1;\n        } else {\n            const pageCount = this.pages;\n            this.currentPage = page > pageCount ? pageCount : page;\n        }\n        this.refresh();\n    }\n\n    /**\n     * disable all actions (select and buttons).\n     * @param isDisable is disable all actions\n     */\n    disable(isDisable: boolean) {\n        this.disabled = isDisable;\n        if (this.disabled) {\n            Object.values(this.actions).forEach(a => a.disabled = true);\n            if (this.config.pageRadius < 2) {\n                return;\n            }\n            if (this.config.pageNumbersType === 'select') {\n                (this.panels.pagesPanel as HTMLSelectElement).disabled = true;\n                return;\n            }\n            this.pageNumberButtons.forEach(a => a.disabled = true);\n            return;\n        }\n        this[updateActionStatus](this.currentPage, this.pages, this.length);\n    }\n\n    /**\n     * calculate page numbers by radius.\n     */\n    [calcPageNumbers](): number[] {\n        if (typeof this.config.pageRadius !== \"number\") {\n            throw Error('pageRadius must be number.');\n        }\n        if (this.config.pageRadius < 2) {\n            return [];\n        }\n        const pages = this.pages;\n        let start = this.currentPage - this.config.pageRadius;\n        let end = this.currentPage + this.config.pageRadius;\n        if (start <= 0) {\n            end = end - start + 1;\n        }\n        if (end > pages) {\n            start -= end - pages - 1;\n        }\n        const pageNums = [];\n        do {\n            if (start > 0 && start <= pages) {\n                pageNums.push(start);\n            }\n        } while (++start < end);\n        return pageNums;\n    }\n\n    /**\n     * update current page and page number buttons/select by length, avoid current page &gt; total pages occurs display empty result.\n     * @param length result length\n     */\n    [updateCurrent](length: number) {\n        this.length = length;\n        const pageCount = this.pages;\n        this.currentPage = this.currentPage > pageCount ? pageCount : this.currentPage;\n        if (this.config.pageRadius < 2) {\n            return;\n        }\n        this.pageNumbers = this[calcPageNumbers]();\n        // update page number button/select elements\n        if (this.config.pageNumbersType === 'select') {\n            this.panels.pagesPanel.innerHTML = this.pageNumbers.map(num => `<option ${num === this.currentPage ? 'selected' : ''}>${num}</option>`).join('');\n            return;\n        }\n        this.panels.pagesPanel.innerHTML = '';\n        this.pageNumberButtons = this.pageNumbers.map(num => {\n            const btn = createElement('BUTTON', {\n                className: `axp-btn axp-ripple-btn${num === this.currentPage ? ' axp-btn-current' : ''}`,\n                innerHTML: `${num}<span class=\"axp-btn-touch-target\"></span>`\n            }) as HTMLButtonElement;\n            this.panels.pagesPanel.appendChild(btn);\n            return btn;\n        });\n    }\n\n    /**\n     * init pager dom elements by config.\n     */\n    [initDomElements]() {\n        this.container.innerHTML = '<div class=\"ax-pager\"></div>';\n\n        this.actions.selectPageSize.innerHTML = this.config.pageSizeOptions.map(num => `<option ${this.size === num ? 'selected' : ''}>${num}</option>`).join('');\n        this.labels.itemsPerPageLabel.innerHTML = this.config.itemsPerPageLabel + (this.config.showPageSizeOptions ? '' : this.size);\n\n        // page size panel\n        [this.labels.itemsPerPageLabel,\n            (this.config.showPageSizeOptions ? this.actions.selectPageSize : null)\n        ].filter(e => e !== null)\n            .forEach(e => this.panels.pageSizePanel.appendChild(e));\n\n        // range actions panel\n        [this.labels.rangeLabel,\n            (this.config.showFirstLastButtons ? this.actions.btnFirst : null),\n            this.actions.btnPrev,\n            (this.config.pageRadius > 1 ? this.panels.pagesPanel : null),\n            this.actions.btnNext,\n            (this.config.showFirstLastButtons ? this.actions.btnLast : null)\n        ].filter(e => e !== null)\n            .forEach(e => this.panels.actionsPanel.appendChild(e));\n\n        // container\n        [(this.config.hidePageSize ? null : this.panels.pageSizePanel),\n            this.panels.actionsPanel\n        ].filter(e => e !== null)\n            .forEach(e => this.container.firstElementChild.appendChild(e));\n    }\n\n    /**\n     * update range label text.\n     */\n    [updateRangeLabel]() {\n        this.labels.rangeLabel.innerHTML = this.config.getRangeLabel(this.currentPage, this.size, this.pages, this.length);\n    }\n\n    /**\n     * update actions status.\n     * @param page current page\n     * @param pages total pages\n     * @param length result length\n     */\n    [updateActionStatus](page: number, pages: number, length: number) {\n        if (this.disabled) {\n            return;\n        }\n        const disableFirstPrev = page <= 1;\n        const disableNextLast = pages <= 1 || page === pages;\n\n        const firstPrevClz = `axp-btn${disableFirstPrev ? '' : ' axp-ripple-btn'}`;\n        const nextLastClz = `axp-btn${disableNextLast ? '' : ' axp-ripple-btn'}`;\n\n        this.actions.selectPageSize.disabled = length <= 0;\n\n        this.actions.btnFirst.disabled = disableFirstPrev;\n        this.actions.btnFirst.className = firstPrevClz;\n        this.actions.btnPrev.disabled = disableFirstPrev;\n        this.actions.btnPrev.className = firstPrevClz;\n\n        this.actions.btnNext.disabled = disableNextLast;\n        this.actions.btnNext.className = nextLastClz;\n        this.actions.btnLast.disabled = disableNextLast;\n        this.actions.btnLast.className = nextLastClz;\n\n        if (this.config.pageRadius < 2) {\n            return;\n        }\n        if (this.config.pageNumbersType === 'select') {\n            (this.panels.pagesPanel as HTMLSelectElement).disabled = this.disabled;\n            return;\n        }\n        const pageNumberButtons = this.pageNumberButtons;\n        const pageBtnCount = pageNumberButtons.length;\n        if (pageBtnCount > 0) {\n            for (let i = 0; i < pageBtnCount; i++) {\n                if (i === 0) {\n                    (pageNumberButtons[i] as HTMLButtonElement).disabled = disableFirstPrev;\n                    continue;\n                }\n                if (i === pageBtnCount - 1) {\n                    (pageNumberButtons[i] as HTMLButtonElement).disabled = disableNextLast;\n                    continue;\n                }\n                // current page number button always disable.\n                if (i === this.pageNumbers.indexOf(page)) {\n                    (pageNumberButtons[i] as HTMLButtonElement).disabled = true;\n                    continue;\n                }\n                (pageNumberButtons[i] as HTMLButtonElement).disabled = this.disabled;\n            }\n        }\n    }\n}","import {ContentType, AjaxAdapter} from \"../ajax-adapter\";\nimport {RequestInitOption} from \"../../config/request-option\";\n\n/**\n * Based on fetch api adapter.\n */\nexport class FetchAdapter implements AjaxAdapter {\n    request(url: string, pageParams: {}, option: RequestInitOption): Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            const method = (option.method || 'GET').toUpperCase();\n            let searchUrl = url;\n\n            const initOption: RequestInit = {\n                method: option.method,\n                headers: option.headers,\n            };\n\n            if (method === 'GET') {\n                const req = Object.assign({}, option.data, pageParams);\n                const suffix = url.includes('?') ? '&' : '?';\n                searchUrl = searchUrl + suffix + new URLSearchParams(req as {});\n            } else if (method === 'POST') {\n                if (option.data instanceof FormData) {\n                    const fd = new FormData();\n                    option.data.forEach((v, k) => fd.set(k, v));\n                    Object.keys(pageParams).forEach(k => fd.set(k, pageParams[k]));\n                    initOption.body = fd;\n                } else {\n                    const contentType = option.headers['Content-Type'] || ContentType.URL_ENCODED;\n                    if (contentType === ContentType.FORM_DATA) {\n                        const fd = new FormData();\n                        Object.keys(option.data).forEach(k => fd.set(k, option.data[k]));\n                        Object.keys(pageParams).forEach(k => fd.set(k, pageParams[k]));\n                        initOption.body = fd;\n                    } else {\n                        const req = Object.assign({}, option.data, pageParams);\n                        if (contentType === ContentType.URL_ENCODED) {\n                            initOption.body = new URLSearchParams(req as {});\n                        } else if (contentType === ContentType.JSON) {\n                            initOption.body = JSON.stringify(req);\n                        }\n                    }\n                }\n            }\n            option.before(initOption);\n            fetch(searchUrl, initOption)\n                .then(response => {\n                    if (response.ok) {\n                        response.json().then(resolve);\n                        return;\n                    }\n                    reject(response.status + ': ' + (response.statusText || 'request failed.'));\n                }).catch(reject);\n        });\n    }\n}","import {PageConfig} from \"./config/page-config\";\nimport {axpager, createElement} from \"./axpager\";\nimport {XMLHttpRequestAdapter} from \"./ajax/adapters/xml-http-request-adapter\";\nimport {FetchAdapter} from \"./ajax/adapters/fetch-adapter\";\n\n/**\n * init a new paginator instance.\n */\nconst init: (container: HTMLElement, config: PageConfig) => axpager = axpager.init;\n\nexport {\n    axpager as Paginator,\n    init,\n    createElement,\n    XMLHttpRequestAdapter,\n    FetchAdapter\n};\n\nexport * from \"./config/page-event\";\nexport * from \"./config/page-config\";\nexport * from \"./config/request-option\";\nexport * from \"./ajax/ajax-adapter\";\n"],"names":["ContentType","JSON","URL_ENCODED","FORM_DATA","XMLHttpRequestAdapter","prototype","request","url","pageParams","option","_this","this","Promise","resolve","reject","xhr","readyState","abort","XMLHttpRequest","responseType","Object","keys","headers","forEach","k","setRequestHeader","before","onload","status","response","statusText","timeout","ontimeout","onerror","method","toUpperCase","req","assign","data","suffix","includes","searchUrl","URLSearchParams","open","send","FormData","fd_1","v","set","contentType","fd_2","stringify","defaultPageConfig","itemsPerPageLabel","firstPageLabel","previousPageLabel","nextPageLabel","lastPageLabel","hidePageSize","showFirstLastButtons","showPageSizeOptions","initPageNumber","initPageSize","pageRadius","pageNumbersType","pageSizeOptions","ajaxAdapter","getRangeLabel","page","size","pages","length","concat","getPageParams","getPagedResource","pager","recordCount","changes","pageEvent","eventTarget","defaultRequestOption","init","success","requestData","error","finish","filter","item","icons","createElement","tagName","attributes","e","document","a","initDomElements","Symbol","updateActionStatus","updateRangeLabel","updateCurrent","calcPageNumbers","axpager","container","config","pageNumberButtons","previousPage","currentPage","pageNumbers","disabled","actions","selectPageSize","className","btnFirst","type","title","innerHTML","btnPrev","btnNext","btnLast","labels","rangeLabel","panels","pageSizePanel","actionsPanel","pagesPanel","addEventListener","target","parentElement","matched","tempPreviousPage","next","pageCount","idx","indexOf","of","select","options","selectedIndex","newPages","defineProperty","get","num","int","Math","floor","end","start","ajax","Error","initOption","then","_a","catch","finally","resource","Array","filteredResource","pagedResource","slice","refresh","goto","disable","isDisable","values","pageNums","push","map","btn","appendChild","join","firstElementChild","disableFirstPrev","disableNextLast","firstPrevClz","nextLastClz","pageBtnCount","i","FetchAdapter","body","fetch","ok","json"],"mappings":"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"}
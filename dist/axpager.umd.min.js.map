{"version":3,"file":"axpager.umd.min.js","sources":["../src/ajax/ajax-adapter.ts","../src/ajax/adapters/xml-http-request-adapter.ts","../src/axpager.ts","../src/ajax/adapters/fetch-adapter.ts","../src/public-api.ts"],"sourcesContent":["import {RequestInitOption} from \"../config/request-option\";\n\nexport const ContentType = {\n    JSON: 'application/json',\n    URL_ENCODED: 'application/x-www-form-urlencoded',\n    FORM_DATA: 'multipart/form-data'\n};\n\n/**\n * ajax paging adapter.\n */\nexport interface AjaxAdapter {\n\n    /**\n     * request method, resolve response and reject exception.\n     */\n    request(url: string, pageParams: {}, reqOption: RequestInitOption): Promise<any>;\n}","import {ContentType, AjaxAdapter} from \"../ajax-adapter\";\nimport {RequestInitOption} from \"../../config/request-option\";\n\n/**\n * Base on XMLHttpRequest default implementation.\n */\nexport class XMLHttpRequestAdapter implements AjaxAdapter {\n    private xhr: XMLHttpRequest;\n\n    request(url: string, pageParams: {}, option: RequestInitOption): Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            if (this.xhr && this.xhr.readyState !== 4) {\n                this.xhr.abort();\n            }\n            this.xhr = new XMLHttpRequest();\n            this.xhr.responseType = 'json';\n            Object.keys(option.headers).forEach(k => {\n                this.xhr.setRequestHeader(k, option.headers[k]);\n            });\n            option.before(this.xhr);\n            this.xhr.onload = function () {\n                if (this.readyState === 4 && this.status >= 200 && this.status < 300) {\n                    resolve(this.response);\n                    return;\n                }\n                reject(this.status + ': ' + (this.statusText || 'request failed.'));\n            };\n            if (option.timeout && option.timeout >= 0) {\n                this.xhr.timeout = option.timeout;\n                this.xhr.ontimeout = function () {\n                    reject('408: request timeout, request wait time > ' + this.timeout);\n                };\n            }\n            this.xhr.onerror = function () {\n                reject(this.status + \": \" + (this.statusText || 'server error.'));\n            };\n            const method = (option.method || 'GET').toUpperCase();\n            if (method === 'GET') {\n                const req = Object.assign({}, option.data, pageParams);\n                const suffix = url.includes('?') ? '&' : '?';\n                const searchUrl = url + suffix + new URLSearchParams(req as {});\n                this.xhr.open(method, searchUrl, true);\n                this.xhr.send();\n                return;\n            }\n            if (method === 'POST') {\n                this.xhr.open(method, url, true);\n                if (option.data instanceof FormData) {\n                    const fd = new FormData();\n                    option.data.forEach((v, k) => fd.set(k, v));\n                    Object.keys(pageParams).forEach(k => fd.set(k, pageParams[k]));\n                    this.xhr.send(fd);\n                    return;\n                }\n                const contentType = option.headers['Content-Type'] || ContentType.URL_ENCODED;\n                if (contentType === ContentType.FORM_DATA) {\n                    const fd = new FormData();\n                    Object.keys(option.data).forEach(k => fd.set(k, option.data[k]));\n                    Object.keys(pageParams).forEach(k => fd.set(k, pageParams[k]));\n                    this.xhr.send(fd);\n                    return;\n                }\n                const req = Object.assign({}, option.data, pageParams);\n                if (contentType === ContentType.URL_ENCODED) {\n                    this.xhr.send(new URLSearchParams(req));\n                    return;\n                }\n                if (contentType === ContentType.JSON) {\n                    this.xhr.send(JSON.stringify(req));\n                    return;\n                }\n                this.xhr.abort();\n                reject('Not support Content-Type: ' + contentType);\n            }\n            reject('Not support ' + method + ' method.');\n        });\n    }\n}","import {PageConfig} from \"./config/page-config\";\nimport {RequestInitOption, RequestOption} from \"./config/request-option\";\nimport {PageEvent} from \"./config/page-event\";\nimport {XMLHttpRequestAdapter} from \"./ajax/adapters/xml-http-request-adapter\";\n\n// noinspection JSUnresolvedReference\n/**\n * default page init config.\n */\nconst defaultPageConfig: PageConfig = {\n    itemsPerPageLabel: '每页条数',\n    firstPageLabel: '第一页',\n    previousPageLabel: '上一页',\n    nextPageLabel: '下一页',\n    lastPageLabel: '最后一页',\n    hidePageSize: false,\n    showFirstLastButtons: true,\n    showPageSizeOptions: true,\n    pageSizeOptions: [10, 15, 30],\n    ajaxAdapter: new XMLHttpRequestAdapter(),\n    getRangeLabel: (page: number, size: number, pages: number, length: number) => `第${page}/${pages}页，共${length}条`,\n    getPageParams: (page, size) => ({page: page, size: size}),\n    getPagedResource: response => ({data: response.data, length: response.pager.recordCount}),\n    changes: (pageEvent, eventTarget) => void (0),\n};\n/**\n * default request paging option.\n */\nconst defaultRequestOption: RequestOption = {\n    method: 'GET',\n    data: {},\n    headers: {},\n    timeout: -1,\n    before: init => void (0),\n    success: (data, pageEvent, requestData) => void (0),\n    error: error => void 0,\n    finish: () => void (0),\n    filter: (item, requestData) => true\n}\n\nconst icons = {\n    fastBackward: '<svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"mat-icon\"><path d=\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"></path></svg>',\n    backward: '<svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"mat-icon\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"></path></svg>',\n    forward: '<svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"mat-icon\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"></path></svg>',\n    fastForward: '<svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"mat-icon\"><path d=\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"></path></svg>',\n};\n\nexport const createElement = (tagName: string, attributes: { [index: string]: any } = {}): HTMLElement => {\n    const e = document.createElement(tagName);\n    Object.keys(attributes).forEach(a => {\n        e[a] = attributes[a];\n    });\n    return e;\n};\n\nconst initDomElements = Symbol('initDomElements');\nconst updateActionStatus = Symbol('updateActionStatus');\nconst updateRangeLabel = Symbol('updateRangeLabel');\n\n/**\n * paginator support ajax request and static array data paging.\n */\nexport class axpager {\n    private container!: HTMLElement;\n    private config: PageConfig = {};\n    private target: string | any[];\n    private readonly actions!: {\n        btnLast: HTMLButtonElement;\n        btnNext: HTMLButtonElement;\n        btnPrev: HTMLButtonElement;\n        btnFirst: HTMLButtonElement;\n        selectPageSize: HTMLSelectElement;\n    };\n    private readonly labels!: {\n        itemsPerPageLabel: HTMLSpanElement;\n        rangeLabel: HTMLSpanElement\n    };\n    private readonly panels!: {\n        actionsPanel: HTMLDivElement;\n        pageSizePanel: HTMLDivElement;\n    };\n    private previousPage: number = 1;\n    private currentPage: number = 1;\n    private length: number = 0;\n    private size: number = 0;\n    private option: RequestOption;\n\n    /**\n     * paginator.\n     * @param container container element\n     * @param config config\n     */\n    constructor(container: HTMLElement, config?: PageConfig) {\n        this.container = container;\n        this.config = Object.assign({}, defaultPageConfig, config);\n        this.size = this.config.pageSizeOptions[0] || 10;\n        this.actions = {\n            selectPageSize: createElement('SELECT', {\n                className: 'mat-select mat-size-options',\n                disabled: true\n            }) as HTMLSelectElement,\n            btnFirst: createElement('BUTTON', {\n                type: 'button',\n                title: this.config.firstPageLabel,\n                innerHTML: `${icons.fastBackward}<span class=\"mat-btn-touch-target\"></span>`,\n                className: 'mat-btn',\n                disabled: true\n            }) as HTMLButtonElement,\n            btnPrev: createElement('BUTTON', {\n                type: 'button',\n                title: this.config.previousPageLabel,\n                innerHTML: `${icons.backward}<span class=\"mat-btn-touch-target\"></span>`,\n                className: 'mat-btn',\n                disabled: true\n            }) as HTMLButtonElement,\n            btnNext: createElement('BUTTON', {\n                type: 'button',\n                title: this.config.nextPageLabel,\n                innerHTML: `${icons.forward}<span class=\"mat-btn-touch-target\"></span>`,\n                className: 'mat-btn',\n                disabled: true\n            }) as HTMLButtonElement,\n            btnLast: createElement('BUTTON', {\n                type: 'button',\n                title: this.config.lastPageLabel,\n                innerHTML: `${icons.fastForward}<span class=\"mat-btn-touch-target\"></span>`,\n                className: 'mat-btn',\n                disabled: true\n            }) as HTMLButtonElement,\n        };\n\n        this.labels = {\n            itemsPerPageLabel: createElement('SPAN', {\n                className: 'mat-label mat-items-per-page'\n            }) as HTMLSpanElement,\n            rangeLabel: createElement('SPAN', {className: 'mat-label mat-range'}) as HTMLSpanElement\n        };\n\n        this.panels = {\n            pageSizePanel: createElement('DIV', {className: 'mat-page-size'}) as HTMLDivElement,\n            actionsPanel: createElement('DIV', {className: 'mat-range-actions'}) as HTMLDivElement\n        };\n\n        this.container.addEventListener('click', e => {\n            let target = e.target as HTMLButtonElement;\n            if (target == null) return;\n            if (target.className === 'mat-btn-touch-target') {\n                target = target.parentElement as HTMLButtonElement;\n            }\n            if (target.disabled) {\n                return;\n            }\n            const actions = this.actions;\n            let matched = true;\n            this.previousPage = this.currentPage;\n            switch (target) {\n                case actions.btnFirst:\n                    this.currentPage = 1;\n                    break;\n                case actions.btnPrev:\n                    this.currentPage = this.currentPage > 1 ? this.currentPage - 1 : 1;\n                    break;\n                case actions.btnNext:\n                    const next = this.currentPage + 1;\n                    const pageCount = this.pages;\n                    this.currentPage = next > pageCount ? pageCount : next;\n                    break;\n                case actions.btnLast:\n                    this.currentPage = this.pages;\n                    break;\n                default:\n                    matched = false;\n                    break;\n            }\n            if (matched) {\n                this.config.changes(this.pageEvent, target);\n                this.of(this.target, this.option);\n            }\n        });\n\n        this.actions.selectPageSize.addEventListener('change', e => {\n            this.previousPage = this.currentPage;\n            this.size = +(e.target as HTMLSelectElement).value || 10;\n            const newPages = this.pages;\n            if (this.currentPage > newPages) {\n                this.currentPage = newPages;\n            }\n            this.config.changes(this.pageEvent, e.target);\n            this.of(this.target, this.option);\n        });\n\n        this[initDomElements]();\n    }\n\n    /**\n     * total pages count.\n     */\n    get pages(): number {\n        const num = this.length / this.size;\n        const int = Math.floor(num);\n        if (int === num) {\n            return int;\n        }\n        return int + 1;\n    }\n\n    /**\n     * ajax paging request page params.\n     */\n    get pageParams() {\n        return this.config.getPageParams(this.currentPage, this.size);\n    }\n\n    /**\n     * page event.\n     */\n    get pageEvent(): PageEvent {\n        const end = this.currentPage * this.size;\n        return {\n            previousPage: this.previousPage,\n            page: this.currentPage,\n            size: this.size,\n            start: (this.currentPage - 1) * this.size,\n            end: end > this.length ? this.length : end,\n            pages: this.pages,\n            length: this.length\n        }\n    }\n\n    /**\n     * init a new paginator instance.\n     * @param container container element\n     * @param config config\n     * @return xpager paginator\n     */\n    static init(container: HTMLElement, config?: PageConfig): axpager {\n        return new axpager(container, config);\n    }\n\n    /**\n     * ajax request paging.\n     * @param url url\n     * @param option option\n     */\n    ajax(url: string, option?: RequestOption) {\n        if (!(typeof url === 'string')) {\n            throw Error('Request url is required.');\n        }\n        this.target = url;\n        this.option = Object.assign({}, defaultRequestOption, option);\n        const initOption: RequestInitOption = {\n            method: this.option.method,\n            data: this.option.data,\n            headers: this.option.headers,\n            timeout: this.option.timeout,\n            before: this.option.before\n        };\n        this.config.ajaxAdapter.request(this.target, this.pageParams, initOption)\n            .then(response => {\n                const {data, length} = this.config.getPagedResource(response);\n                this.length = length;\n                const pageEvent = this.pageEvent;\n                this.option.success(data, pageEvent, this.option.data);\n                this[updateActionStatus](pageEvent.page, pageEvent.pages, pageEvent.length);\n                this[updateRangeLabel]();\n            }).catch(this.option.error)\n            .finally(this.option.finish);\n    }\n\n    /**\n     * static array data paging.\n     * @param data array\n     * @param option option\n     */\n    resource(data: any[], option?: RequestOption) {\n        if (!(data instanceof Array)) {\n            throw Error('data must be an Array.');\n        }\n        this.target = data;\n        this.option = Object.assign({}, defaultRequestOption, option);\n        this.option.before(null);\n        const filteredResource = this.target.filter(item => this.option.filter(item, this.option.data));\n        this.length = filteredResource.length;\n        const pageEvent = this.pageEvent;\n        const pagedResource = filteredResource.slice(pageEvent.start, pageEvent.end);\n        this.option.success(pagedResource, pageEvent, this.option.data);\n        this[updateActionStatus](pageEvent.page, pageEvent.pages, pageEvent.length);\n        this[updateRangeLabel]();\n        this.option.finish();\n    }\n\n    /**\n     * request paging.\n     * @param target url or static array data\n     * @param option option\n     */\n    of(target: string | any[], option?: RequestOption) {\n        if (typeof target === 'string') {\n            this.ajax(target, option);\n            return;\n        }\n        if (target instanceof Array) {\n            this.resource(target, option);\n            return;\n        }\n        throw Error(target + ' can not be paging.');\n    }\n\n    /**\n     * refresh current page's data.\n     */\n    refresh() {\n        this.of(this.target, this.option);\n    }\n\n    [initDomElements]() {\n        this.container.innerHTML = '<div class=\"rabbit-pager\"></div>';\n\n        this.actions.selectPageSize.innerHTML = this.config.pageSizeOptions.map(num => `<option value=\"${num}\">${num}</option>`).join('');\n        this.labels.itemsPerPageLabel.innerHTML = this.config.itemsPerPageLabel + (this.config.showPageSizeOptions ? '' : this.config.pageSizeOptions[0] || 10);\n\n        // page size panel\n        [this.labels.itemsPerPageLabel,\n            (this.config.showPageSizeOptions ? this.actions.selectPageSize : null)\n        ].filter(e => e !== null)\n            .forEach(e => this.panels.pageSizePanel.appendChild(e));\n\n        // range actions panel\n        [this.labels.rangeLabel,\n            (this.config.showFirstLastButtons ? this.actions.btnFirst : null),\n            this.actions.btnPrev,\n            this.actions.btnNext,\n            (this.config.showFirstLastButtons ? this.actions.btnLast : null)\n        ].filter(e => e !== null)\n            .forEach(e => this.panels.actionsPanel.appendChild(e));\n\n        // container\n        [(this.config.hidePageSize ? null : this.panels.pageSizePanel),\n            this.panels.actionsPanel\n        ].filter(e => e !== null)\n            .forEach(e => this.container.firstElementChild.appendChild(e));\n    }\n\n    [updateRangeLabel]() {\n        this.labels.rangeLabel.innerHTML = this.config.getRangeLabel(this.currentPage, this.size, this.pages, this.length);\n    }\n\n    [updateActionStatus](page: number, pages: number, length: number) {\n        const a = page === 1;\n        const b = pages === 1 || page === pages;\n\n        const ra = `mat-btn${a ? '' : ' mat-ripple-btn'}`;\n        const rb = `mat-btn${b ? '' : ' mat-ripple-btn'}`;\n\n        this.actions.selectPageSize.disabled = length === 0;\n\n        this.actions.btnFirst.disabled = a;\n        this.actions.btnFirst.className = ra;\n        this.actions.btnPrev.disabled = a;\n        this.actions.btnPrev.className = ra;\n\n        this.actions.btnNext.disabled = b;\n        this.actions.btnNext.className = rb;\n        this.actions.btnLast.disabled = b;\n        this.actions.btnLast.className = rb;\n    }\n}","import {ContentType, AjaxAdapter} from \"../ajax-adapter\";\nimport {RequestInitOption} from \"../../config/request-option\";\n\n/**\n * Based on fetch api adapter.\n */\nexport class FetchAdapter implements AjaxAdapter {\n    request(url: string, pageParams: {}, option: RequestInitOption): Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            const method = (option.method || 'GET').toUpperCase();\n            let searchUrl = url;\n\n            const initOption: RequestInit = {\n                method: option.method,\n                headers: option.headers,\n            };\n\n            if (method === 'GET') {\n                const req = Object.assign({}, option.data, pageParams);\n                const suffix = url.includes('?') ? '&' : '?';\n                searchUrl = searchUrl + suffix + new URLSearchParams(req as {});\n            } else if (method === 'POST') {\n                if (option.data instanceof FormData) {\n                    const fd = new FormData();\n                    option.data.forEach((v, k) => fd.set(k, v));\n                    Object.keys(pageParams).forEach(k => fd.set(k, pageParams[k]));\n                    initOption.body = fd;\n                } else {\n                    const contentType = option.headers['Content-Type'] || ContentType.URL_ENCODED;\n                    if (contentType === ContentType.FORM_DATA) {\n                        const fd = new FormData();\n                        Object.keys(option.data).forEach(k => fd.set(k, option.data[k]));\n                        Object.keys(pageParams).forEach(k => fd.set(k, pageParams[k]));\n                        initOption.body = fd;\n                    } else {\n                        const req = Object.assign({}, option.data, pageParams);\n                        if (contentType === ContentType.URL_ENCODED) {\n                            initOption.body = new URLSearchParams(req as {});\n                        } else if (contentType === ContentType.JSON) {\n                            initOption.body = JSON.stringify(req);\n                        }\n                    }\n                }\n            }\n            option.before(initOption);\n            fetch(searchUrl, initOption)\n                .then(response => {\n                    if (response.ok) {\n                        response.json().then(resolve);\n                        return;\n                    }\n                    reject(response.status + ': ' + (response.statusText || 'request failed.'));\n                }).catch(reject);\n        });\n    }\n}","import {PageConfig} from \"./config/page-config\";\nimport {axpager, createElement} from \"./axpager\";\nimport {XMLHttpRequestAdapter} from \"./ajax/adapters/xml-http-request-adapter\";\nimport {FetchAdapter} from \"./ajax/adapters/fetch-adapter\";\n\n/**\n * init a new paginator instance.\n */\nconst init: (container: HTMLElement, config: PageConfig) => axpager = axpager.init;\n\nexport {\n    axpager as Paginator,\n    init,\n    createElement,\n    XMLHttpRequestAdapter,\n    FetchAdapter\n};\n\nexport * from \"./config/page-event\";\nexport * from \"./config/page-config\";\nexport * from \"./config/request-option\";\nexport * from \"./ajax/ajax-adapter\";\n"],"names":["ContentType","JSON","URL_ENCODED","FORM_DATA","XMLHttpRequestAdapter","prototype","request","url","pageParams","option","_this","this","Promise","resolve","reject","xhr","readyState","abort","XMLHttpRequest","responseType","Object","keys","headers","forEach","k","setRequestHeader","before","onload","status","response","statusText","timeout","ontimeout","onerror","method","toUpperCase","req","assign","data","suffix","includes","searchUrl","URLSearchParams","open","send","FormData","fd_1","v","set","contentType","fd_2","stringify","defaultPageConfig","itemsPerPageLabel","firstPageLabel","previousPageLabel","nextPageLabel","lastPageLabel","hidePageSize","showFirstLastButtons","showPageSizeOptions","pageSizeOptions","ajaxAdapter","getRangeLabel","page","size","pages","length","concat","getPageParams","getPagedResource","pager","recordCount","changes","pageEvent","eventTarget","defaultRequestOption","init","success","requestData","error","finish","filter","item","icons","createElement","tagName","attributes","e","document","a","initDomElements","Symbol","updateActionStatus","updateRangeLabel","axpager","container","config","previousPage","currentPage","actions","selectPageSize","className","disabled","btnFirst","type","title","innerHTML","btnPrev","btnNext","btnLast","labels","rangeLabel","panels","pageSizePanel","actionsPanel","addEventListener","target","parentElement","matched","next","pageCount","of","value","newPages","defineProperty","get","num","int","Math","floor","end","start","ajax","Error","initOption","then","_a","catch","finally","resource","Array","filteredResource","pagedResource","slice","refresh","map","join","appendChild","firstElementChild","b","ra","rb","FetchAdapter","body","fetch","ok","json"],"mappings":"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"}
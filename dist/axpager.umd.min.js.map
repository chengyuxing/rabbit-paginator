{"version":3,"file":"axpager.umd.min.js","sources":["../src/ajax/ajax-adapter.ts","../src/ajax/adapters/xml-http-request-adapter.ts","../src/axpager.ts","../src/ajax/adapters/fetch-adapter.ts","../src/public-api.ts"],"sourcesContent":["import {RequestInitOption} from \"../config/request-option\";\n\nexport const ContentType = {\n    JSON: 'application/json',\n    URL_ENCODED: 'application/x-www-form-urlencoded',\n    FORM_DATA: 'multipart/form-data'\n};\n\n/**\n * ajax request adapter.\n */\nexport interface AjaxAdapter {\n\n    /**\n     * request method, resolve response and reject exception.\n     */\n    request(url: string, pageParams: {}, reqOption: RequestInitOption): Promise<any>;\n}","import {ContentType, AjaxAdapter} from \"../ajax-adapter\";\nimport {RequestInitOption} from \"../../config/request-option\";\n\n/**\n * Base on XMLHttpRequest default implementation.\n */\nexport class XMLHttpRequestAdapter implements AjaxAdapter {\n    private xhr: XMLHttpRequest;\n\n    request(url: string, pageParams: {}, option: RequestInitOption): Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            if (this.xhr && this.xhr.readyState !== 4) {\n                this.xhr.abort();\n            }\n            this.xhr = new XMLHttpRequest();\n            this.xhr.responseType = 'json';\n            Object.keys(option.headers).forEach(k => {\n                this.xhr.setRequestHeader(k, option.headers[k]);\n            });\n            option.before(this.xhr);\n            this.xhr.onload = function () {\n                if (this.readyState === 4 && this.status >= 200 && this.status < 300) {\n                    resolve(this.response);\n                    return;\n                }\n                reject(this.status + ': ' + (this.statusText || 'request failed.'));\n            };\n            if (option.timeout && option.timeout >= 0) {\n                this.xhr.timeout = option.timeout;\n                this.xhr.ontimeout = function () {\n                    reject('408: request timeout, request wait time > ' + this.timeout);\n                };\n            }\n            this.xhr.onerror = function () {\n                reject(this.status + \": \" + (this.statusText || 'server error.'));\n            };\n            const method = (option.method || 'GET').toUpperCase();\n            if (method === 'GET') {\n                const req = Object.assign({}, option.data, pageParams);\n                const suffix = url.includes('?') ? '&' : '?';\n                const searchUrl = url + suffix + new URLSearchParams(req as {});\n                this.xhr.open(method, searchUrl, true);\n                this.xhr.send();\n                return;\n            }\n            if (method === 'POST') {\n                this.xhr.open(method, url, true);\n                if (option.data instanceof FormData) {\n                    const fd = new FormData();\n                    option.data.forEach((v, k) => fd.set(k, v));\n                    Object.keys(pageParams).forEach(k => fd.set(k, pageParams[k]));\n                    this.xhr.send(fd);\n                    return;\n                }\n                const contentType = option.headers['Content-Type'] || ContentType.URL_ENCODED;\n                if (contentType === ContentType.FORM_DATA) {\n                    const fd = new FormData();\n                    Object.keys(option.data).forEach(k => fd.set(k, option.data[k]));\n                    Object.keys(pageParams).forEach(k => fd.set(k, pageParams[k]));\n                    this.xhr.send(fd);\n                    return;\n                }\n                const req = Object.assign({}, option.data, pageParams);\n                if (contentType === ContentType.URL_ENCODED) {\n                    this.xhr.send(new URLSearchParams(req));\n                    return;\n                }\n                if (contentType === ContentType.JSON) {\n                    this.xhr.send(JSON.stringify(req));\n                    return;\n                }\n                this.xhr.abort();\n                reject('Not support Content-Type: ' + contentType);\n            }\n            reject('Not support ' + method + ' method.');\n        });\n    }\n}","import {PageConfig} from \"./config/page-config\";\nimport {RequestInitOption, RequestOption} from \"./config/request-option\";\nimport {PageEvent} from \"./config/page-event\";\nimport {XMLHttpRequestAdapter} from \"./ajax/adapters/xml-http-request-adapter\";\n\n// noinspection JSUnresolvedReference\n/**\n * default page init config.\n */\nconst defaultPageConfig: PageConfig = {\n    itemsPerPageLabel: '每页条数 ',\n    firstPageLabel: '第一页',\n    previousPageLabel: '上一页',\n    nextPageLabel: '下一页',\n    lastPageLabel: '最后一页',\n    hidePageSize: false,\n    showFirstLastButtons: true,\n    showPageSizeOptions: true,\n    initPageNumber: 1,\n    initPageSize: 10,\n    pageSizeOptions: [10, 15, 30],\n    ajaxAdapter: new XMLHttpRequestAdapter(),\n    getRangeLabel: (page, size, pages, length) => `第${page}/${pages}页，共${length}条`,\n    getPageParams: (page, size) => ({page: page, size: size}),\n    getPagedResource: response => ({data: response.data, length: response.pager.recordCount}),\n    changes: (pageEvent, eventTarget) => void (0),\n};\n/**\n * default request paging option.\n */\nconst defaultRequestOption: RequestOption = {\n    method: 'GET',\n    data: {},\n    headers: {},\n    timeout: -1,\n    before: init => void (0),\n    success: (data, pageEvent, requestData) => void (0),\n    error: error => void (0),\n    finish: () => void (0),\n    filter: (item, requestData) => true\n}\n\nconst icons = {\n    fastBackward: '<svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"axp-icon\"><path d=\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"></path></svg>',\n    backward: '<svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"axp-icon\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"></path></svg>',\n    forward: '<svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"axp-icon\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"></path></svg>',\n    fastForward: '<svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"axp-icon\"><path d=\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"></path></svg>',\n};\n\n/**\n * create html element\n * @param tagName tag name\n * @param attributes attributes\n */\nexport const createElement = (tagName: string, attributes: { [index: string]: any } = {}): HTMLElement => {\n    const e = document.createElement(tagName);\n    Object.keys(attributes).forEach(a => {\n        e[a] = attributes[a];\n    });\n    return e;\n};\n\nconst initDomElements = Symbol('initDomElements');\nconst updateActionStatus = Symbol('updateActionStatus');\nconst updateRangeLabel = Symbol('updateRangeLabel');\nconst updateCurrentPage = Symbol('updateCurrentPage');\n\n/**\n * paginator support ajax request and static array data paging.\n */\nexport class axpager {\n    private container!: HTMLElement;\n    private config: PageConfig = {};\n    private target: string | any[];\n    private readonly actions!: {\n        btnLast: HTMLButtonElement;\n        btnNext: HTMLButtonElement;\n        btnPrev: HTMLButtonElement;\n        btnFirst: HTMLButtonElement;\n        selectPageSize: HTMLSelectElement;\n    };\n    private readonly labels!: {\n        itemsPerPageLabel: HTMLSpanElement;\n        rangeLabel: HTMLSpanElement\n    };\n    private readonly panels!: {\n        actionsPanel: HTMLDivElement;\n        pageSizePanel: HTMLDivElement;\n    };\n    private previousPage: number = 1;\n    private currentPage: number = 1;\n    private length: number = 0;\n    private size: number = 0;\n    private option: RequestOption;\n    private disabled = false;\n\n    /**\n     * paginator.\n     * @param container container element\n     * @param config config\n     */\n    constructor(container: HTMLElement, config?: PageConfig) {\n        this.container = container;\n        this.config = Object.assign({}, defaultPageConfig, config);\n        this.currentPage = this.config.initPageNumber || 1;\n        this.size = this.config.pageSizeOptions.includes(this.config.initPageSize) ? this.config.initPageSize : (this.config.pageSizeOptions[0] || 10);\n        this.actions = {\n            selectPageSize: createElement('SELECT', {\n                className: 'axp-select axp-size-options',\n                disabled: true\n            }) as HTMLSelectElement,\n            btnFirst: createElement('BUTTON', {\n                type: 'button',\n                title: this.config.firstPageLabel,\n                innerHTML: `${icons.fastBackward}<span class=\"axp-btn-touch-target\"></span>`,\n                className: 'axp-btn',\n                disabled: true\n            }) as HTMLButtonElement,\n            btnPrev: createElement('BUTTON', {\n                type: 'button',\n                title: this.config.previousPageLabel,\n                innerHTML: `${icons.backward}<span class=\"axp-btn-touch-target\"></span>`,\n                className: 'axp-btn',\n                disabled: true\n            }) as HTMLButtonElement,\n            btnNext: createElement('BUTTON', {\n                type: 'button',\n                title: this.config.nextPageLabel,\n                innerHTML: `${icons.forward}<span class=\"axp-btn-touch-target\"></span>`,\n                className: 'axp-btn',\n                disabled: true\n            }) as HTMLButtonElement,\n            btnLast: createElement('BUTTON', {\n                type: 'button',\n                title: this.config.lastPageLabel,\n                innerHTML: `${icons.fastForward}<span class=\"axp-btn-touch-target\"></span>`,\n                className: 'axp-btn',\n                disabled: true\n            }) as HTMLButtonElement,\n        };\n\n        this.labels = {\n            itemsPerPageLabel: createElement('SPAN', {\n                className: 'axp-label axp-items-per-page'\n            }) as HTMLSpanElement,\n            rangeLabel: createElement('SPAN', {className: 'axp-label axp-range'}) as HTMLSpanElement\n        };\n\n        this.panels = {\n            pageSizePanel: createElement('DIV', {className: 'axp-page-size'}) as HTMLDivElement,\n            actionsPanel: createElement('DIV', {className: 'axp-range-actions'}) as HTMLDivElement\n        };\n\n        this.panels.actionsPanel.addEventListener('click', e => {\n            if (this.disabled) {\n                return;\n            }\n            let target = e.target as HTMLButtonElement;\n            if (target == null) return;\n            if (target.className === 'axp-btn-touch-target') {\n                target = target.parentElement as HTMLButtonElement;\n            }\n            if (target == null || target.disabled) {\n                return;\n            }\n            const actions = this.actions;\n            let matched = true;\n            this.previousPage = this.currentPage;\n            switch (target) {\n                case actions.btnFirst:\n                    this.currentPage = 1;\n                    break;\n                case actions.btnPrev:\n                    this.currentPage = this.currentPage > 1 ? this.currentPage - 1 : 1;\n                    break;\n                case actions.btnNext:\n                    const next = this.currentPage + 1;\n                    const pageCount = this.pages;\n                    this.currentPage = next > pageCount ? pageCount : next;\n                    break;\n                case actions.btnLast:\n                    this.currentPage = this.pages;\n                    break;\n                default:\n                    matched = false;\n                    break;\n            }\n            if (matched) {\n                this.config.changes(this.pageEvent, target);\n                this.of(this.target, this.option);\n            }\n        });\n\n        this.actions.selectPageSize.addEventListener('change', e => {\n            if (this.disabled) {\n                return;\n            }\n            const select = e.target as HTMLSelectElement;\n            if (select.disabled) {\n                return;\n            }\n            this.previousPage = this.currentPage;\n            this.size = +select.value || 10;\n            const newPages = this.pages;\n            if (this.currentPage > newPages) {\n                this.currentPage = newPages;\n            }\n            this.config.changes(this.pageEvent, e.target);\n            this.of(this.target, this.option);\n        });\n\n        this[initDomElements]();\n    }\n\n    /**\n     * total pages.\n     */\n    get pages(): number {\n        if (this.length <= 1) {\n            return 1;\n        }\n        const num = this.length / this.size;\n        if (num <= 1) {\n            return 1;\n        }\n        const int = Math.floor(num);\n        if (int === num) {\n            return int;\n        }\n        return int + 1;\n    }\n\n    /**\n     * ajax paging request page params.\n     */\n    get pageParams() {\n        return this.config.getPageParams(this.currentPage, this.size);\n    }\n\n    /**\n     * page event.\n     */\n    get pageEvent(): PageEvent {\n        const end = this.currentPage * this.size;\n        return {\n            previousPage: this.previousPage,\n            page: this.currentPage,\n            size: this.size,\n            start: (this.currentPage - 1) * this.size,\n            end: end > this.length ? this.length : end,\n            pages: this.pages,\n            length: this.length\n        }\n    }\n\n    /**\n     * init a new paginator instance.\n     * @param container container element\n     * @param config config\n     * @return xpager paginator\n     */\n    static init(container: HTMLElement, config?: PageConfig): axpager {\n        return new axpager(container, config);\n    }\n\n    /**\n     * ajax request paging.\n     * @param url url\n     * @param option option\n     */\n    ajax(url: string, option?: RequestOption) {\n        if (this.disabled) {\n            return;\n        }\n        if (!(typeof url === 'string')) {\n            throw Error('Request url is required.');\n        }\n        this.target = url;\n        this.option = Object.assign({}, defaultRequestOption, option);\n        const initOption: RequestInitOption = {\n            method: this.option.method,\n            data: this.option.data,\n            headers: this.option.headers,\n            timeout: this.option.timeout,\n            before: this.option.before\n        };\n        this.config.ajaxAdapter.request(this.target, this.pageParams, initOption)\n            .then(response => {\n                const {data, length} = this.config.getPagedResource(response);\n                this[updateCurrentPage](length);\n                const pageEvent = this.pageEvent;\n                this.option.success(data, pageEvent, this.option.data);\n                this[updateActionStatus](pageEvent.page, pageEvent.pages, pageEvent.length);\n                this[updateRangeLabel]();\n            }).catch(this.option.error)\n            .finally(this.option.finish);\n    }\n\n    /**\n     * static array data paging.\n     * @param data array\n     * @param option option\n     */\n    resource(data: any[], option?: RequestOption) {\n        if (this.disabled) {\n            return;\n        }\n        if (!(data instanceof Array)) {\n            throw Error('data must be an Array.');\n        }\n        this.target = data;\n        this.option = Object.assign({}, defaultRequestOption, option);\n        this.option.before(null);\n        const filteredResource = this.target.filter(item => this.option.filter(item, this.option.data));\n        this[updateCurrentPage](filteredResource.length);\n        const pageEvent = this.pageEvent;\n        const pagedResource = filteredResource.slice(pageEvent.start, pageEvent.end);\n        this.option.success(pagedResource, pageEvent, this.option.data);\n        this[updateActionStatus](pageEvent.page, pageEvent.pages, pageEvent.length);\n        this[updateRangeLabel]();\n        this.option.finish();\n    }\n\n    /**\n     * request paging.\n     * @param target url or static array data\n     * @param option option\n     */\n    of(target: string | any[], option?: RequestOption) {\n        if (typeof target === 'string') {\n            this.ajax(target, option);\n            return;\n        }\n        if (target instanceof Array) {\n            this.resource(target, option);\n            return;\n        }\n        throw Error(target + ' can not be paging.');\n    }\n\n    /**\n     * refresh current page's data.\n     */\n    refresh() {\n        this.of(this.target, this.option);\n    }\n\n    /**\n     * goto target page number.\n     * @param page target page number\n     */\n    goto(page: number) {\n        if (this.disabled) {\n            return;\n        }\n        if (typeof page !== 'number') {\n            throw Error('page must be number.');\n        }\n        this.previousPage = this.currentPage;\n        if (page < 1) {\n            this.currentPage = 1;\n        } else {\n            const pageCount = this.pages;\n            this.currentPage = page > pageCount ? pageCount : page;\n        }\n        this.refresh();\n    }\n\n    /**\n     * disable all actions (select and buttons).\n     * @param isDisable is disable all actions\n     */\n    disable(isDisable: boolean) {\n        this.disabled = isDisable;\n        if (this.disabled) {\n            Object.values(this.actions).forEach(a => a.disabled = true);\n            return;\n        }\n        this[updateActionStatus](this.currentPage, this.pages, this.length);\n    }\n\n    /**\n     * update current page by length, avoid current page &gt; total pages occurs display empty result.\n     * @param length result length\n     */\n    [updateCurrentPage](length: number) {\n        this.length = length;\n        const pageCount = this.pages;\n        this.currentPage = this.currentPage > pageCount ? pageCount : this.currentPage;\n    }\n\n    /**\n     * init pager dom elements by config.\n     */\n    [initDomElements]() {\n        this.container.innerHTML = '<div class=\"ax-pager\"></div>';\n\n        this.actions.selectPageSize.innerHTML = this.config.pageSizeOptions.map(num => `<option value=\"${num}\" ${this.size === num ? 'selected' : ''}>${num}</option>`).join('');\n        this.labels.itemsPerPageLabel.innerHTML = this.config.itemsPerPageLabel + (this.config.showPageSizeOptions ? '' : this.size);\n\n        // page size panel\n        [this.labels.itemsPerPageLabel,\n            (this.config.showPageSizeOptions ? this.actions.selectPageSize : null)\n        ].filter(e => e !== null)\n            .forEach(e => this.panels.pageSizePanel.appendChild(e));\n\n        // range actions panel\n        [this.labels.rangeLabel,\n            (this.config.showFirstLastButtons ? this.actions.btnFirst : null),\n            this.actions.btnPrev,\n            this.actions.btnNext,\n            (this.config.showFirstLastButtons ? this.actions.btnLast : null)\n        ].filter(e => e !== null)\n            .forEach(e => this.panels.actionsPanel.appendChild(e));\n\n        // container\n        [(this.config.hidePageSize ? null : this.panels.pageSizePanel),\n            this.panels.actionsPanel\n        ].filter(e => e !== null)\n            .forEach(e => this.container.firstElementChild.appendChild(e));\n    }\n\n    /**\n     * update range label text.\n     */\n    [updateRangeLabel]() {\n        this.labels.rangeLabel.innerHTML = this.config.getRangeLabel(this.currentPage, this.size, this.pages, this.length);\n    }\n\n    /**\n     * update actions status.\n     * @param page current page\n     * @param pages total pages\n     * @param length result length\n     */\n    [updateActionStatus](page: number, pages: number, length: number) {\n        if (this.disabled) {\n            return;\n        }\n        const disableFirstPrev = page <= 1;\n        const disableNextLast = pages <= 1 || page === pages;\n\n        const firstPrevClz = `axp-btn${disableFirstPrev ? '' : ' axp-ripple-btn'}`;\n        const nextLastClz = `axp-btn${disableNextLast ? '' : ' axp-ripple-btn'}`;\n\n        this.actions.selectPageSize.disabled = length <= 0;\n\n        this.actions.btnFirst.disabled = disableFirstPrev;\n        this.actions.btnFirst.className = firstPrevClz;\n        this.actions.btnPrev.disabled = disableFirstPrev;\n        this.actions.btnPrev.className = firstPrevClz;\n\n        this.actions.btnNext.disabled = disableNextLast;\n        this.actions.btnNext.className = nextLastClz;\n        this.actions.btnLast.disabled = disableNextLast;\n        this.actions.btnLast.className = nextLastClz;\n    }\n}","import {ContentType, AjaxAdapter} from \"../ajax-adapter\";\nimport {RequestInitOption} from \"../../config/request-option\";\n\n/**\n * Based on fetch api adapter.\n */\nexport class FetchAdapter implements AjaxAdapter {\n    request(url: string, pageParams: {}, option: RequestInitOption): Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            const method = (option.method || 'GET').toUpperCase();\n            let searchUrl = url;\n\n            const initOption: RequestInit = {\n                method: option.method,\n                headers: option.headers,\n            };\n\n            if (method === 'GET') {\n                const req = Object.assign({}, option.data, pageParams);\n                const suffix = url.includes('?') ? '&' : '?';\n                searchUrl = searchUrl + suffix + new URLSearchParams(req as {});\n            } else if (method === 'POST') {\n                if (option.data instanceof FormData) {\n                    const fd = new FormData();\n                    option.data.forEach((v, k) => fd.set(k, v));\n                    Object.keys(pageParams).forEach(k => fd.set(k, pageParams[k]));\n                    initOption.body = fd;\n                } else {\n                    const contentType = option.headers['Content-Type'] || ContentType.URL_ENCODED;\n                    if (contentType === ContentType.FORM_DATA) {\n                        const fd = new FormData();\n                        Object.keys(option.data).forEach(k => fd.set(k, option.data[k]));\n                        Object.keys(pageParams).forEach(k => fd.set(k, pageParams[k]));\n                        initOption.body = fd;\n                    } else {\n                        const req = Object.assign({}, option.data, pageParams);\n                        if (contentType === ContentType.URL_ENCODED) {\n                            initOption.body = new URLSearchParams(req as {});\n                        } else if (contentType === ContentType.JSON) {\n                            initOption.body = JSON.stringify(req);\n                        }\n                    }\n                }\n            }\n            option.before(initOption);\n            fetch(searchUrl, initOption)\n                .then(response => {\n                    if (response.ok) {\n                        response.json().then(resolve);\n                        return;\n                    }\n                    reject(response.status + ': ' + (response.statusText || 'request failed.'));\n                }).catch(reject);\n        });\n    }\n}","import {PageConfig} from \"./config/page-config\";\nimport {axpager, createElement} from \"./axpager\";\nimport {XMLHttpRequestAdapter} from \"./ajax/adapters/xml-http-request-adapter\";\nimport {FetchAdapter} from \"./ajax/adapters/fetch-adapter\";\n\n/**\n * init a new paginator instance.\n */\nconst init: (container: HTMLElement, config: PageConfig) => axpager = axpager.init;\n\nexport {\n    axpager as Paginator,\n    init,\n    createElement,\n    XMLHttpRequestAdapter,\n    FetchAdapter\n};\n\nexport * from \"./config/page-event\";\nexport * from \"./config/page-config\";\nexport * from \"./config/request-option\";\nexport * from \"./ajax/ajax-adapter\";\n"],"names":["ContentType","JSON","URL_ENCODED","FORM_DATA","XMLHttpRequestAdapter","prototype","request","url","pageParams","option","_this","this","Promise","resolve","reject","xhr","readyState","abort","XMLHttpRequest","responseType","Object","keys","headers","forEach","k","setRequestHeader","before","onload","status","response","statusText","timeout","ontimeout","onerror","method","toUpperCase","req","assign","data","suffix","includes","searchUrl","URLSearchParams","open","send","FormData","fd_1","v","set","contentType","fd_2","stringify","defaultPageConfig","itemsPerPageLabel","firstPageLabel","previousPageLabel","nextPageLabel","lastPageLabel","hidePageSize","showFirstLastButtons","showPageSizeOptions","initPageNumber","initPageSize","pageSizeOptions","ajaxAdapter","getRangeLabel","page","size","pages","length","concat","getPageParams","getPagedResource","pager","recordCount","changes","pageEvent","eventTarget","defaultRequestOption","init","success","requestData","error","finish","filter","item","icons","createElement","tagName","attributes","e","document","a","initDomElements","Symbol","updateActionStatus","updateRangeLabel","updateCurrentPage","axpager","container","config","previousPage","currentPage","disabled","actions","selectPageSize","className","btnFirst","type","title","innerHTML","btnPrev","btnNext","btnLast","labels","rangeLabel","panels","pageSizePanel","actionsPanel","addEventListener","target","parentElement","matched","next","pageCount","of","select","value","newPages","defineProperty","get","num","int","Math","floor","end","start","ajax","Error","initOption","then","_a","catch","finally","resource","Array","filteredResource","pagedResource","slice","refresh","goto","disable","isDisable","values","map","join","appendChild","firstElementChild","disableFirstPrev","disableNextLast","firstPrevClz","nextLastClz","FetchAdapter","body","fetch","ok","json"],"mappings":"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"}
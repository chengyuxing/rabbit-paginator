{"version":3,"file":"axpager.mjs","sources":["../../src/ajax/ajax-adapter.ts","../../src/ajax/adapters/xml-http-request-adapter.ts","../../src/axpager.ts","../../src/ajax/adapters/fetch-adapter.ts","../../src/public-api.ts"],"sourcesContent":["import {RequestInitOption} from \"../config/request-option\";\n\nexport const ContentType = {\n    JSON: 'application/json',\n    URL_ENCODED: 'application/x-www-form-urlencoded',\n    FORM_DATA: 'multipart/form-data'\n};\n\n/**\n * ajax request adapter.\n */\nexport interface AjaxAdapter {\n\n    /**\n     * request method, resolve response and reject exception.\n     */\n    request(url: string, pageParams: {}, reqOption: RequestInitOption): Promise<any>;\n}","import {ContentType, AjaxAdapter} from \"../ajax-adapter\";\nimport {RequestInitOption} from \"../../config/request-option\";\n\n/**\n * Base on XMLHttpRequest default implementation.\n */\nexport class XMLHttpRequestAdapter implements AjaxAdapter {\n    private xhr: XMLHttpRequest;\n\n    request(url: string, pageParams: {}, option: RequestInitOption): Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            if (this.xhr && this.xhr.readyState !== 4) {\n                this.xhr.abort();\n            }\n            this.xhr = new XMLHttpRequest();\n            this.xhr.responseType = 'json';\n            Object.keys(option.headers).forEach(k => {\n                this.xhr.setRequestHeader(k, option.headers[k]);\n            });\n            option.before(this.xhr);\n            this.xhr.onload = function () {\n                if (this.readyState === 4 && this.status >= 200 && this.status < 300) {\n                    resolve(this.response);\n                    return;\n                }\n                reject(this.status + ': ' + (this.statusText || 'request failed.'));\n            };\n            if (option.timeout && option.timeout >= 0) {\n                this.xhr.timeout = option.timeout;\n                this.xhr.ontimeout = function () {\n                    reject('408: request timeout, request wait time > ' + this.timeout);\n                };\n            }\n            this.xhr.onerror = function () {\n                reject(this.status + \": \" + (this.statusText || 'server error.'));\n            };\n            const method = (option.method || 'GET').toUpperCase();\n            if (method === 'GET') {\n                const req = Object.assign({}, option.data, pageParams);\n                const suffix = url.includes('?') ? '&' : '?';\n                const searchUrl = url + suffix + new URLSearchParams(req as {});\n                this.xhr.open(method, searchUrl, true);\n                this.xhr.send();\n                return;\n            }\n            if (method === 'POST') {\n                this.xhr.open(method, url, true);\n                if (option.data instanceof FormData) {\n                    const fd = new FormData();\n                    option.data.forEach((v, k) => fd.set(k, v));\n                    Object.keys(pageParams).forEach(k => fd.set(k, pageParams[k]));\n                    this.xhr.send(fd);\n                    return;\n                }\n                const contentType = option.headers['Content-Type'] || ContentType.URL_ENCODED;\n                if (contentType === ContentType.FORM_DATA) {\n                    const fd = new FormData();\n                    Object.keys(option.data).forEach(k => fd.set(k, option.data[k]));\n                    Object.keys(pageParams).forEach(k => fd.set(k, pageParams[k]));\n                    this.xhr.send(fd);\n                    return;\n                }\n                const req = Object.assign({}, option.data, pageParams);\n                if (contentType === ContentType.URL_ENCODED) {\n                    this.xhr.send(new URLSearchParams(req));\n                    return;\n                }\n                if (contentType === ContentType.JSON) {\n                    this.xhr.send(JSON.stringify(req));\n                    return;\n                }\n                this.xhr.abort();\n                reject('Not support Content-Type: ' + contentType);\n            }\n            reject('Not support ' + method + ' method.');\n        });\n    }\n}","import {PageConfig} from \"./config/page-config\";\nimport {RequestInitOption, RequestOption} from \"./config/request-option\";\nimport {PageEvent} from \"./config/page-event\";\nimport {XMLHttpRequestAdapter} from \"./ajax/adapters/xml-http-request-adapter\";\n\n// noinspection JSUnresolvedReference\n/**\n * default page init config.\n */\nconst defaultPageConfig: PageConfig = {\n    itemsPerPageLabel: '每页条数',\n    firstPageLabel: '第一页',\n    previousPageLabel: '上一页',\n    nextPageLabel: '下一页',\n    lastPageLabel: '最后一页',\n    hidePageSize: false,\n    showFirstLastButtons: true,\n    showPageSizeOptions: true,\n    pageSizeOptions: [10, 15, 30],\n    ajaxAdapter: new XMLHttpRequestAdapter(),\n    getRangeLabel: (page, size, pages, length) => `第${page}/${pages}页，共${length}条`,\n    getPageParams: (page, size) => ({page: page, size: size}),\n    getPagedResource: response => ({data: response.data, length: response.pager.recordCount}),\n    changes: (pageEvent, eventTarget) => void (0),\n};\n/**\n * default request paging option.\n */\nconst defaultRequestOption: RequestOption = {\n    method: 'GET',\n    data: {},\n    headers: {},\n    timeout: -1,\n    before: init => void (0),\n    success: (data, pageEvent, requestData) => void (0),\n    error: error => void 0,\n    finish: () => void (0),\n    filter: (item, requestData) => true\n}\n\nconst icons = {\n    fastBackward: '<svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"axp-icon\"><path d=\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"></path></svg>',\n    backward: '<svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"axp-icon\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"></path></svg>',\n    forward: '<svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"axp-icon\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"></path></svg>',\n    fastForward: '<svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"axp-icon\"><path d=\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"></path></svg>',\n};\n\nexport const createElement = (tagName: string, attributes: { [index: string]: any } = {}): HTMLElement => {\n    const e = document.createElement(tagName);\n    Object.keys(attributes).forEach(a => {\n        e[a] = attributes[a];\n    });\n    return e;\n};\n\nconst initDomElements = Symbol('initDomElements');\nconst updateActionStatus = Symbol('updateActionStatus');\nconst updateRangeLabel = Symbol('updateRangeLabel');\nconst updateCurrentPage = Symbol('updateCurrentPage');\n\n/**\n * paginator support ajax request and static array data paging.\n */\nexport class axpager {\n    private container!: HTMLElement;\n    private config: PageConfig = {};\n    private target: string | any[];\n    private readonly actions!: {\n        btnLast: HTMLButtonElement;\n        btnNext: HTMLButtonElement;\n        btnPrev: HTMLButtonElement;\n        btnFirst: HTMLButtonElement;\n        selectPageSize: HTMLSelectElement;\n    };\n    private readonly labels!: {\n        itemsPerPageLabel: HTMLSpanElement;\n        rangeLabel: HTMLSpanElement\n    };\n    private readonly panels!: {\n        actionsPanel: HTMLDivElement;\n        pageSizePanel: HTMLDivElement;\n    };\n    private previousPage: number = 1;\n    private currentPage: number = 1;\n    private length: number = 0;\n    private size: number = 0;\n    private option: RequestOption;\n\n    /**\n     * paginator.\n     * @param container container element\n     * @param config config\n     */\n    constructor(container: HTMLElement, config?: PageConfig) {\n        this.container = container;\n        this.config = Object.assign({}, defaultPageConfig, config);\n        this.size = this.config.pageSizeOptions[0] || 10;\n        this.actions = {\n            selectPageSize: createElement('SELECT', {\n                className: 'axp-select axp-size-options',\n                disabled: true\n            }) as HTMLSelectElement,\n            btnFirst: createElement('BUTTON', {\n                type: 'button',\n                title: this.config.firstPageLabel,\n                innerHTML: `${icons.fastBackward}<span class=\"axp-btn-touch-target\"></span>`,\n                className: 'axp-btn',\n                disabled: true\n            }) as HTMLButtonElement,\n            btnPrev: createElement('BUTTON', {\n                type: 'button',\n                title: this.config.previousPageLabel,\n                innerHTML: `${icons.backward}<span class=\"axp-btn-touch-target\"></span>`,\n                className: 'axp-btn',\n                disabled: true\n            }) as HTMLButtonElement,\n            btnNext: createElement('BUTTON', {\n                type: 'button',\n                title: this.config.nextPageLabel,\n                innerHTML: `${icons.forward}<span class=\"axp-btn-touch-target\"></span>`,\n                className: 'axp-btn',\n                disabled: true\n            }) as HTMLButtonElement,\n            btnLast: createElement('BUTTON', {\n                type: 'button',\n                title: this.config.lastPageLabel,\n                innerHTML: `${icons.fastForward}<span class=\"axp-btn-touch-target\"></span>`,\n                className: 'axp-btn',\n                disabled: true\n            }) as HTMLButtonElement,\n        };\n\n        this.labels = {\n            itemsPerPageLabel: createElement('SPAN', {\n                className: 'axp-label axp-items-per-page'\n            }) as HTMLSpanElement,\n            rangeLabel: createElement('SPAN', {className: 'axp-label axp-range'}) as HTMLSpanElement\n        };\n\n        this.panels = {\n            pageSizePanel: createElement('DIV', {className: 'axp-page-size'}) as HTMLDivElement,\n            actionsPanel: createElement('DIV', {className: 'axp-range-actions'}) as HTMLDivElement\n        };\n\n        this.panels.actionsPanel.addEventListener('click', e => {\n            let target = e.target as HTMLButtonElement;\n            if (target == null) return;\n            if (target.className === 'axp-btn-touch-target') {\n                target = target.parentElement as HTMLButtonElement;\n            }\n            if (target == null || target.disabled) {\n                return;\n            }\n            const actions = this.actions;\n            let matched = true;\n            this.previousPage = this.currentPage;\n            switch (target) {\n                case actions.btnFirst:\n                    this.currentPage = 1;\n                    break;\n                case actions.btnPrev:\n                    this.currentPage = this.currentPage > 1 ? this.currentPage - 1 : 1;\n                    break;\n                case actions.btnNext:\n                    const next = this.currentPage + 1;\n                    const pageCount = this.pages;\n                    this.currentPage = next > pageCount ? pageCount : next;\n                    break;\n                case actions.btnLast:\n                    this.currentPage = this.pages;\n                    break;\n                default:\n                    matched = false;\n                    break;\n            }\n            if (matched) {\n                this.config.changes(this.pageEvent, target);\n                this.of(this.target, this.option);\n            }\n        });\n\n        this.actions.selectPageSize.addEventListener('change', e => {\n            const select = e.target as HTMLSelectElement;\n            if (select.disabled) {\n                return;\n            }\n            this.previousPage = this.currentPage;\n            this.size = +select.value || 10;\n            const newPages = this.pages;\n            if (this.currentPage > newPages) {\n                this.currentPage = newPages;\n            }\n            this.config.changes(this.pageEvent, e.target);\n            this.of(this.target, this.option);\n        });\n\n        this[initDomElements]();\n    }\n\n    /**\n     * total pages.\n     */\n    get pages(): number {\n        if (this.length <= 1) {\n            return 1;\n        }\n        const num = this.length / this.size;\n        if (num <= 1) {\n            return 1;\n        }\n        const int = Math.floor(num);\n        if (int === num) {\n            return int;\n        }\n        return int + 1;\n    }\n\n    /**\n     * ajax paging request page params.\n     */\n    get pageParams() {\n        return this.config.getPageParams(this.currentPage, this.size);\n    }\n\n    /**\n     * page event.\n     */\n    get pageEvent(): PageEvent {\n        const end = this.currentPage * this.size;\n        return {\n            previousPage: this.previousPage,\n            page: this.currentPage,\n            size: this.size,\n            start: (this.currentPage - 1) * this.size,\n            end: end > this.length ? this.length : end,\n            pages: this.pages,\n            length: this.length\n        }\n    }\n\n    /**\n     * init a new paginator instance.\n     * @param container container element\n     * @param config config\n     * @return xpager paginator\n     */\n    static init(container: HTMLElement, config?: PageConfig): axpager {\n        return new axpager(container, config);\n    }\n\n    /**\n     * ajax request paging.\n     * @param url url\n     * @param option option\n     */\n    ajax(url: string, option?: RequestOption) {\n        if (!(typeof url === 'string')) {\n            throw Error('Request url is required.');\n        }\n        this.target = url;\n        this.option = Object.assign({}, defaultRequestOption, option);\n        const initOption: RequestInitOption = {\n            method: this.option.method,\n            data: this.option.data,\n            headers: this.option.headers,\n            timeout: this.option.timeout,\n            before: this.option.before\n        };\n        this.config.ajaxAdapter.request(this.target, this.pageParams, initOption)\n            .then(response => {\n                const {data, length} = this.config.getPagedResource(response);\n                this[updateCurrentPage](length);\n                const pageEvent = this.pageEvent;\n                this.option.success(data, pageEvent, this.option.data);\n                this[updateActionStatus](pageEvent.page, pageEvent.pages, pageEvent.length);\n                this[updateRangeLabel]();\n            }).catch(this.option.error)\n            .finally(this.option.finish);\n    }\n\n    /**\n     * static array data paging.\n     * @param data array\n     * @param option option\n     */\n    resource(data: any[], option?: RequestOption) {\n        if (!(data instanceof Array)) {\n            throw Error('data must be an Array.');\n        }\n        this.target = data;\n        this.option = Object.assign({}, defaultRequestOption, option);\n        this.option.before(null);\n        const filteredResource = this.target.filter(item => this.option.filter(item, this.option.data));\n        this[updateCurrentPage](filteredResource.length);\n        const pageEvent = this.pageEvent;\n        const pagedResource = filteredResource.slice(pageEvent.start, pageEvent.end);\n        this.option.success(pagedResource, pageEvent, this.option.data);\n        this[updateActionStatus](pageEvent.page, pageEvent.pages, pageEvent.length);\n        this[updateRangeLabel]();\n        this.option.finish();\n    }\n\n    /**\n     * request paging.\n     * @param target url or static array data\n     * @param option option\n     */\n    of(target: string | any[], option?: RequestOption) {\n        if (typeof target === 'string') {\n            this.ajax(target, option);\n            return;\n        }\n        if (target instanceof Array) {\n            this.resource(target, option);\n            return;\n        }\n        throw Error(target + ' can not be paging.');\n    }\n\n    /**\n     * refresh current page's data.\n     */\n    refresh() {\n        this.of(this.target, this.option);\n    }\n\n    /**\n     * disable all actions (select and buttons).\n     * @param isDisable\n     */\n    disable(isDisable: boolean) {\n        if (isDisable) {\n            Object.values(this.actions).forEach(a => a.disabled = true);\n            return;\n        }\n        this[updateActionStatus](this.currentPage, this.pages, this.length);\n    }\n\n    /**\n     * update current page by length, avoid current page &gt; total pages occurs display empty result.\n     * @param length result length\n     */\n    [updateCurrentPage](length: number) {\n        this.length = length;\n        const pageCount = this.pages;\n        this.currentPage = this.currentPage > pageCount ? pageCount : this.currentPage;\n    }\n\n    /**\n     * init pager dom elements by config.\n     */\n    [initDomElements]() {\n        this.container.innerHTML = '<div class=\"ax-pager\"></div>';\n\n        this.actions.selectPageSize.innerHTML = this.config.pageSizeOptions.map(num => `<option value=\"${num}\">${num}</option>`).join('');\n        this.labels.itemsPerPageLabel.innerHTML = this.config.itemsPerPageLabel + (this.config.showPageSizeOptions ? '' : this.config.pageSizeOptions[0] || 10);\n\n        // page size panel\n        [this.labels.itemsPerPageLabel,\n            (this.config.showPageSizeOptions ? this.actions.selectPageSize : null)\n        ].filter(e => e !== null)\n            .forEach(e => this.panels.pageSizePanel.appendChild(e));\n\n        // range actions panel\n        [this.labels.rangeLabel,\n            (this.config.showFirstLastButtons ? this.actions.btnFirst : null),\n            this.actions.btnPrev,\n            this.actions.btnNext,\n            (this.config.showFirstLastButtons ? this.actions.btnLast : null)\n        ].filter(e => e !== null)\n            .forEach(e => this.panels.actionsPanel.appendChild(e));\n\n        // container\n        [(this.config.hidePageSize ? null : this.panels.pageSizePanel),\n            this.panels.actionsPanel\n        ].filter(e => e !== null)\n            .forEach(e => this.container.firstElementChild.appendChild(e));\n    }\n\n    /**\n     * update range label text.\n     */\n    [updateRangeLabel]() {\n        this.labels.rangeLabel.innerHTML = this.config.getRangeLabel(this.currentPage, this.size, this.pages, this.length);\n    }\n\n    /**\n     * update actions status.\n     * @param page current page\n     * @param pages total pages\n     * @param length result length\n     */\n    [updateActionStatus](page: number, pages: number, length: number) {\n        const disableFirstPrev = page <= 1;\n        const disableNextLast = pages <= 1 || page === pages;\n\n        const firstPrevClz = `axp-btn${disableFirstPrev ? '' : ' axp-ripple-btn'}`;\n        const nextLastClz = `axp-btn${disableNextLast ? '' : ' axp-ripple-btn'}`;\n\n        this.actions.selectPageSize.disabled = length <= 0;\n\n        this.actions.btnFirst.disabled = disableFirstPrev;\n        this.actions.btnFirst.className = firstPrevClz;\n        this.actions.btnPrev.disabled = disableFirstPrev;\n        this.actions.btnPrev.className = firstPrevClz;\n\n        this.actions.btnNext.disabled = disableNextLast;\n        this.actions.btnNext.className = nextLastClz;\n        this.actions.btnLast.disabled = disableNextLast;\n        this.actions.btnLast.className = nextLastClz;\n    }\n}","import {ContentType, AjaxAdapter} from \"../ajax-adapter\";\nimport {RequestInitOption} from \"../../config/request-option\";\n\n/**\n * Based on fetch api adapter.\n */\nexport class FetchAdapter implements AjaxAdapter {\n    request(url: string, pageParams: {}, option: RequestInitOption): Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            const method = (option.method || 'GET').toUpperCase();\n            let searchUrl = url;\n\n            const initOption: RequestInit = {\n                method: option.method,\n                headers: option.headers,\n            };\n\n            if (method === 'GET') {\n                const req = Object.assign({}, option.data, pageParams);\n                const suffix = url.includes('?') ? '&' : '?';\n                searchUrl = searchUrl + suffix + new URLSearchParams(req as {});\n            } else if (method === 'POST') {\n                if (option.data instanceof FormData) {\n                    const fd = new FormData();\n                    option.data.forEach((v, k) => fd.set(k, v));\n                    Object.keys(pageParams).forEach(k => fd.set(k, pageParams[k]));\n                    initOption.body = fd;\n                } else {\n                    const contentType = option.headers['Content-Type'] || ContentType.URL_ENCODED;\n                    if (contentType === ContentType.FORM_DATA) {\n                        const fd = new FormData();\n                        Object.keys(option.data).forEach(k => fd.set(k, option.data[k]));\n                        Object.keys(pageParams).forEach(k => fd.set(k, pageParams[k]));\n                        initOption.body = fd;\n                    } else {\n                        const req = Object.assign({}, option.data, pageParams);\n                        if (contentType === ContentType.URL_ENCODED) {\n                            initOption.body = new URLSearchParams(req as {});\n                        } else if (contentType === ContentType.JSON) {\n                            initOption.body = JSON.stringify(req);\n                        }\n                    }\n                }\n            }\n            option.before(initOption);\n            fetch(searchUrl, initOption)\n                .then(response => {\n                    if (response.ok) {\n                        response.json().then(resolve);\n                        return;\n                    }\n                    reject(response.status + ': ' + (response.statusText || 'request failed.'));\n                }).catch(reject);\n        });\n    }\n}","import {PageConfig} from \"./config/page-config\";\nimport {axpager, createElement} from \"./axpager\";\nimport {XMLHttpRequestAdapter} from \"./ajax/adapters/xml-http-request-adapter\";\nimport {FetchAdapter} from \"./ajax/adapters/fetch-adapter\";\n\n/**\n * init a new paginator instance.\n */\nconst init: (container: HTMLElement, config: PageConfig) => axpager = axpager.init;\n\nexport {\n    axpager as Paginator,\n    init,\n    createElement,\n    XMLHttpRequestAdapter,\n    FetchAdapter\n};\n\nexport * from \"./config/page-event\";\nexport * from \"./config/page-config\";\nexport * from \"./config/request-option\";\nexport * from \"./ajax/ajax-adapter\";\n"],"names":[],"mappings":"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"}
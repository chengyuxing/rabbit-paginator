{"version":3,"file":"xpager.mjs","sources":["../../src/xpager.ts","../../src/public-api.ts"],"sourcesContent":["import {PageConfig} from \"./config/page-config\";\nimport {RequestOption} from \"./config/request-option\";\nimport {PageEvent} from \"./config/page-event\";\n\nconst ContentType = {\n    JSON: 'application/json',\n    URL_ENCODED: 'application/x-www-form-urlencoded'\n};\n\n// noinspection JSUnresolvedReference\n/**\n * default page init config.\n */\nconst defaultPageConfig: PageConfig = {\n    itemsPerPageLabel: '每页条数',\n    firstPageLabel: '第一页',\n    previousPageLabel: '上一页',\n    nextPageLabel: '下一页',\n    lastPageLabel: '最后一页',\n    hidePageSize: false,\n    showFirstLastButtons: true,\n    showPageSizeOptions: true,\n    pageSizeOptions: [10, 15, 30],\n    getRangeLabel: (page: number, size: number, length: number) => `第${page}/${Math.floor(length / size + 1)}页，共${length}条`,\n    getPagedResource: response => ({data: response.data, length: response.pager.recordCount}),\n    changes: (pageEvent, eventTarget) => void (0),\n};\n/**\n * default request paging option.\n */\nconst defaultRequestOption: RequestOption = {\n    method: 'GET',\n    data: {},\n    headers: {},\n    timeout: -1,\n    before: xhr => void (0),\n    success: (data, pageEvent) => void (0),\n    error: error => void 0,\n    finish: () => void (0),\n    filter: item => true\n}\n\nconst icons = {\n    fastBackward: '<svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"mat-icon\"><path d=\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"></path></svg>',\n    backward: '<svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"mat-icon\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"></path></svg>',\n    forward: '<svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"mat-icon\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"></path></svg>',\n    fastForward: '<svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"mat-icon\"><path d=\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"></path></svg>',\n};\n\nexport const createElement = (tagName: string, attributes: { [index: string]: any } = {}): HTMLElement => {\n    const e = document.createElement(tagName);\n    Object.keys(attributes).forEach(a => {\n        e[a] = attributes[a];\n    });\n    return e;\n};\n\nconst initDomElements = Symbol('initDomElements');\nconst updateActionStatus = Symbol('updateActionStatus');\nconst updateRangeLabel = Symbol('updateRangeLabel');\n\n/**\n * paginator support ajax request and static array data paging.\n * @author chengyuxingo@gmail.com\n */\nexport class xpager {\n    private container!: HTMLElement;\n    private config: PageConfig = {};\n    private target: string | any[];\n    private readonly actions!: {\n        btnLast: HTMLButtonElement;\n        btnNext: HTMLButtonElement;\n        btnPrev: HTMLButtonElement;\n        btnFirst: HTMLButtonElement;\n        selectPageSize: HTMLSelectElement;\n    };\n    private readonly labels!: {\n        itemsPerPageLabel: HTMLSpanElement;\n        rangeLabel: HTMLSpanElement\n    };\n    private readonly panels!: {\n        actionsPanel: HTMLDivElement;\n        pageSizePanel: HTMLDivElement;\n    };\n    private previousPage: number = 1;\n    private currentPage: number = 1;\n    private length: number = 0;\n    private size: number = 0;\n    private option: RequestOption;\n    private xhr: XMLHttpRequest;\n\n    /**\n     * paginator.\n     * @param container container element\n     * @param config config\n     */\n    constructor(container: HTMLElement, config?: PageConfig) {\n        this.container = container;\n        this.container.innerHTML = '<div class=\"rabbit-pager\"></div>';\n\n        this.config = Object.assign({}, defaultPageConfig, config);\n        this.size = this.config.pageSizeOptions[0] || 10;\n\n        this.actions = {\n            selectPageSize: createElement('SELECT', {\n                className: 'mat-select mat-size-options',\n                disabled: true\n            }) as HTMLSelectElement,\n            btnFirst: createElement('BUTTON', {\n                type: 'button',\n                title: this.config.firstPageLabel,\n                innerHTML: `${icons.fastBackward}<span class=\"mat-btn-touch-target\"></span>`,\n                className: 'mat-btn',\n                disabled: true\n            }) as HTMLButtonElement,\n            btnPrev: createElement('BUTTON', {\n                type: 'button',\n                title: this.config.previousPageLabel,\n                innerHTML: `${icons.backward}<span class=\"mat-btn-touch-target\"></span>`,\n                className: 'mat-btn',\n                disabled: true\n            }) as HTMLButtonElement,\n            btnNext: createElement('BUTTON', {\n                type: 'button',\n                title: this.config.nextPageLabel,\n                innerHTML: `${icons.forward}<span class=\"mat-btn-touch-target\"></span>`,\n                className: 'mat-btn',\n                disabled: true\n            }) as HTMLButtonElement,\n            btnLast: createElement('BUTTON', {\n                type: 'button',\n                title: this.config.lastPageLabel,\n                innerHTML: `${icons.fastForward}<span class=\"mat-btn-touch-target\"></span>`,\n                className: 'mat-btn',\n                disabled: true\n            }) as HTMLButtonElement,\n        };\n\n        this.labels = {\n            itemsPerPageLabel: createElement('SPAN', {\n                className: 'mat-label mat-items-per-page'\n            }) as HTMLSpanElement,\n            rangeLabel: createElement('SPAN', {className: 'mat-label mat-range'}) as HTMLSpanElement\n        };\n\n        this.panels = {\n            pageSizePanel: createElement('DIV', {className: 'mat-page-size'}) as HTMLDivElement,\n            actionsPanel: createElement('DIV', {className: 'mat-range-actions'}) as HTMLDivElement\n        };\n\n        this.container.addEventListener('click', e => {\n            let target = e.target as HTMLButtonElement;\n            if (target == null) return;\n            if (target.className === 'mat-btn-touch-target') {\n                target = target.parentElement as HTMLButtonElement;\n            }\n            if (target.disabled) {\n                return;\n            }\n            const actions = this.actions;\n            let matched = true;\n            this.previousPage = this.currentPage;\n            switch (target) {\n                case actions.btnFirst:\n                    this.currentPage = 1;\n                    break;\n                case actions.btnPrev:\n                    this.currentPage = this.currentPage > 1 ? this.currentPage - 1 : 1;\n                    break;\n                case actions.btnNext:\n                    const next = this.currentPage + 1;\n                    const pageCount = this.pages;\n                    this.currentPage = next > pageCount ? pageCount : next;\n                    break;\n                case actions.btnLast:\n                    this.currentPage = this.pages;\n                    break;\n                default:\n                    matched = false;\n                    break;\n            }\n            if (matched) {\n                this.config.changes(this.pageEvent, target);\n                this.of(this.target, this.option);\n            }\n        });\n\n        this.actions.selectPageSize.addEventListener('change', e => {\n            this.previousPage = this.currentPage;\n            this.size = +(e.target as HTMLSelectElement).value || 10;\n            const newPages = this.pages;\n            if (this.currentPage > newPages) {\n                this.currentPage = newPages;\n            }\n            this.config.changes(this.pageEvent, e.target);\n            this.of(this.target, this.option);\n        });\n\n        this[initDomElements]();\n    }\n\n    /**\n     * total pages count.\n     */\n    get pages(): number {\n        return Math.floor(this.length / this.size) + 1;\n    }\n\n    /**\n     * ajax paging request page params.\n     */\n    get pageParams() {\n        return {\n            page: this.currentPage,\n            size: this.size\n        };\n    }\n\n    /**\n     * page event.\n     */\n    get pageEvent(): PageEvent {\n        const end = this.currentPage * this.size;\n        return {\n            previousPage: this.previousPage,\n            page: this.currentPage,\n            size: this.size,\n            start: (this.currentPage - 1) * this.size,\n            end: end > this.length ? this.length : end,\n            pages: this.pages,\n            length: this.length\n        }\n    }\n\n    /**\n     * init a new paginator instance.\n     * @param container container element\n     * @param config config\n     * @return xpager paginator\n     */\n    static init(container: HTMLElement, config?: PageConfig): xpager {\n        return new xpager(container, config);\n    }\n\n    [initDomElements]() {\n        this.actions.selectPageSize.innerHTML = this.config.pageSizeOptions.map(num => `<option value=\"${num}\">${num}</option>`).join('');\n        this.labels.itemsPerPageLabel.innerHTML = this.config.itemsPerPageLabel + (this.config.showPageSizeOptions ? '' : this.config.pageSizeOptions[0] || 10);\n\n        // page size panel\n        [this.labels.itemsPerPageLabel,\n            (this.config.showPageSizeOptions ? this.actions.selectPageSize : null)\n        ].filter(e => e !== null)\n            .forEach(e => this.panels.pageSizePanel.appendChild(e));\n\n        // range actions panel\n        [this.labels.rangeLabel,\n            (this.config.showFirstLastButtons ? this.actions.btnFirst : null),\n            this.actions.btnPrev,\n            this.actions.btnNext,\n            (this.config.showFirstLastButtons ? this.actions.btnLast : null)\n        ].filter(e => e !== null)\n            .forEach(e => this.panels.actionsPanel.appendChild(e));\n\n        // container\n        [(this.config.hidePageSize ? null : this.panels.pageSizePanel),\n            this.panels.actionsPanel\n        ].filter(e => e !== null)\n            .forEach(e => this.container.firstElementChild.appendChild(e));\n    }\n\n    /**\n     * ajax request paging.\n     * @param url url\n     * @param option option\n     */\n    ajax(url: String, option?: RequestOption) {\n        if (!(url instanceof String)) {\n            throw Error('Request url is required.');\n        }\n        const that = this;\n        this.target = url as string;\n        this.option = Object.assign({}, defaultRequestOption, option);\n        if (!this.xhr) {\n            this.xhr = new XMLHttpRequest();\n            Object.keys(this.option.headers).forEach(k => {\n                this.xhr.setRequestHeader(k, this.option.headers[k]);\n            });\n            this.xhr.responseType = 'json';\n            this.xhr.addEventListener('load', function () {\n                if (this.status === 200) {\n                    const {data, length} = that.config.getPagedResource(this.response);\n                    that.length = length;\n                    const pageEvent = that.pageEvent;\n                    that.option.success(data, pageEvent);\n                    that[updateActionStatus](pageEvent.page, pageEvent.pages, pageEvent.length);\n                    that[updateRangeLabel]();\n                    return;\n                }\n                that.option.error(new Error(this.status + ': request failed, ' + this.statusText));\n            });\n            if (this.option.timeout && this.option.timeout >= 0) {\n                this.xhr.timeout = this.option.timeout;\n                this.xhr.addEventListener('timeout', function () {\n                    that.option.error(new Error('408: request timeout, request wait time > ' + this.timeout));\n                });\n            }\n            this.xhr.addEventListener('error', function () {\n                that.option.error(new Error('500: request error, ' + this.statusText));\n            });\n            this.xhr.addEventListener('loadend', function () {\n                that.option.finish();\n            });\n        }\n        if (this.xhr.readyState !== 4) {\n            this.xhr.abort();\n        }\n\n        const method = (this.option.method || 'GET').toLowerCase();\n\n        this.option.before(this.xhr);\n\n        if (method === 'get') {\n            const req = Object.assign({}, this.option.data, this.pageParams);\n            const suffix = this.target.includes('?') ? '&' : '?';\n            const searchUrl = this.target + suffix + new URLSearchParams(req as {});\n            this.xhr.open(method, searchUrl, true);\n            this.xhr.send();\n            return;\n        }\n\n        if (method === 'post') {\n            this.xhr.open(method, this.target, true);\n            if (this.option.data instanceof FormData) {\n                const fd = new FormData();\n                this.option.data.forEach((v, k) => fd.set(k, v));\n                const pageParams = this.pageParams;\n                Object.keys(pageParams).forEach(k => fd.set(k, pageParams[k]));\n                this.xhr.send(fd);\n                return;\n            }\n\n            const req = Object.assign({}, this.option.data, this.pageParams);\n            const contentType = this.option.headers['Content-Type'] || ContentType.URL_ENCODED;\n            if (contentType === ContentType.URL_ENCODED) {\n                this.xhr.send(new URLSearchParams(req as {}).toString());\n                return;\n            }\n            if (contentType === ContentType.JSON) {\n                this.xhr.send(JSON.stringify(req));\n                return;\n            }\n            throw Error('Not support Content-Type: ' + contentType);\n        }\n        throw Error('Not support ' + method + ' method.');\n    }\n\n    /**\n     * static array data paging.\n     * @param data array\n     * @param option option\n     */\n    resource(data: any[], option?: RequestOption) {\n        if (!(data instanceof Array)) {\n            throw Error('data must be an Array.');\n        }\n        this.target = data || [];\n        this.option = Object.assign({}, defaultRequestOption, option);\n        this.length = this.target.length;\n        this.option.before(null);\n        const filteredResource = this.target.filter(item => this.option.filter(item));\n        const pageEvent = this.pageEvent;\n        const pagedResource = filteredResource.slice(pageEvent.start, pageEvent.end);\n        this.option.success(pagedResource, pageEvent);\n        this[updateActionStatus](pageEvent.page, pageEvent.pages, pageEvent.length);\n        this[updateRangeLabel]();\n        this.option.finish();\n    }\n\n    /**\n     * request paging.\n     * @param target url or static array data\n     * @param option option\n     */\n    of(target: String | any[], option?: RequestOption) {\n        if (target instanceof String) {\n            this.ajax(target, option);\n            return;\n        }\n        if (target instanceof Array) {\n            this.resource(target, option);\n            return;\n        }\n        throw Error(target + ' can not be paging.');\n    }\n\n    /**\n     * refresh current page's data.\n     */\n    refresh() {\n        this.of(this.target, this.option);\n    }\n\n    [updateRangeLabel]() {\n        this.labels.rangeLabel.innerHTML = this.config.getRangeLabel(this.currentPage, this.size, this.length);\n    };\n\n    [updateActionStatus](page: number, pages: number, length: number) {\n        const a = page === 1;\n        const b = pages === 1 || page === pages;\n\n        const ra = `mat-btn${a ? '' : ' mat-ripple-btn'}`;\n        const rb = `mat-btn${b ? '' : ' mat-ripple-btn'}`;\n\n        this.actions.selectPageSize.disabled = length === 0;\n\n        this.actions.btnFirst.disabled = a;\n        this.actions.btnFirst.className = ra;\n        this.actions.btnPrev.disabled = a;\n        this.actions.btnPrev.className = ra;\n\n        this.actions.btnNext.disabled = b;\n        this.actions.btnNext.className = rb;\n        this.actions.btnLast.disabled = b;\n        this.actions.btnLast.className = rb;\n    };\n}","import {PageConfig} from \"./config/page-config\";\nimport {xpager, createElement} from \"./xpager\";\n\n/**\n * init a new paginator instance.\n */\nconst init: (container: HTMLElement, config: PageConfig) => xpager = xpager.init;\n\nexport {\n    xpager as Paginator,\n    init,\n    createElement\n};\n\nexport * from \"./config/page-event\";\nexport * from \"./config/page-config\";\nexport * from \"./config/request-option\";\n\n"],"names":[],"mappings":"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"}